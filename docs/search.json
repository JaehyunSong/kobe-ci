[
  {
    "objectID": "slide/slide01.html#講師紹介",
    "href": "slide/slide01.html#講師紹介",
    "title": "方法論特殊講義III",
    "section": "講師紹介",
    "text": "講師紹介\n\n\n\n\n\nLINEスタンプ絶賛販売中!\n\n\n\n\n宋(そん)  財泫(じぇひょん) (SONG JAEHYUN)\n\n関西大学総合情報学部\n博士（政治学）\n政治行動論、政治学方法論\n\nsong@kansai-u.ac.jp\nhttps://www.jaysong.net"
  },
  {
    "objectID": "slide/slide01.html#内容",
    "href": "slide/slide01.html#内容",
    "title": "方法論特殊講義III",
    "section": "内容",
    "text": "内容\n各講義は以下の内容に関する理論と実習を5:5で行う予定。また、履修者の理解・進捗状況に応じて変更の可能性がある。\n\n1日目:8月17日(水)\n\n因果推論の考え方\nランダム化比較試験\n\n2日目:8月18日(木)\n\nLab Session: R の使い方\n2日目にLab Sessionを行わない場合は、以下の内容を繰り上げ、5日目は操作変数を解説\n\n3日目:8月19日(金)\n\n回帰分析とマッチング、その応用\n\n4日目:8月29日(月)\n\n差分の差分法とその応用\n\n5日目:8月30日(火)\n\n回帰不連続デザイン"
  },
  {
    "objectID": "slide/slide01.html#実習",
    "href": "slide/slide01.html#実習",
    "title": "方法論特殊講義III",
    "section": "実習",
    "text": "実習\n実習はRで行う。1・2日目はRの導入および使い方についても解説（復習レベル）する。\n\n本講義の分析はExcel, SPSS, Stata, Julia, Pythonなどでも可能\nJared P. Lander. 2017. R for Everyone: Advanced Analytics and Graphics (2nd Edition), Addison-Wesley Professional.（和訳有り）\n宋財泫・矢内勇生.『私たちのR: ベストプラクティスの探究』Web-book\n\n無料のR入門書: Rを広く、深く勉強したい人におすすめ\n\n\n\n\n宋のR環境\n\nmacOS 12.4 “Monterey”\nR version 4.2.1 (2022-06-23)\n\nR > 4.1ならOK\n\nRStudio 2022.02.3+492 “Prairie Trillium”\nスライド、サポートページ、実習用資料の執筆環境\n\nQuarto 1.0.36\nR package {quarto} 1.2"
  },
  {
    "objectID": "slide/slide01.html#rの学習資料",
    "href": "slide/slide01.html#rの学習資料",
    "title": "方法論特殊講義III",
    "section": "Rの学習資料",
    "text": "Rの学習資料\n計量政治学とR\n\n浅野正彦・矢内勇生. 2019『Rによる計量政治学』オーム社.\n飯田健. 2013.『計量政治分析』共立出版.\nKosuke Imai. 2017. Quantitative Social Science: An Introduction, Princeton University Press. (邦訳あり[上/下])\n\nR全般\n\nWickham, Hadley and Grolemund, Garrett. 2017. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, O’Reilly. (邦訳あり/原著はインターネットから無料で閲覧可)\n松村優哉 他. 2021. 『改訂2版 Rユーザのための RStudio[実践] 入門—tidyverseによるモダンな分析フローの世界—』技術評論社.\nWickham, Hadley. 2019. Advanced R (Second Edition), O’Reilly. (邦訳あり/原著はインターネットから無料で閲覧可)"
  },
  {
    "objectID": "slide/slide01.html#slackについて",
    "href": "slide/slide01.html#slackについて",
    "title": "方法論特殊講義III",
    "section": "Slackについて",
    "text": "Slackについて\n登録方法\n\nTAの高根さんにE-mail\n\n201j024j@stu.kobe-u.ac.jp\nメールのタイトルは「計量政治学方法論I」、または「ソンさん、かっこいい！」\n空メールでOK\n\n\nSlackの使い方\n\nGoogleで「Slack 使い方」で検索\nSlack上の表示名は実名で"
  },
  {
    "objectID": "slide/slide01.html#評価",
    "href": "slide/slide01.html#評価",
    "title": "方法論特殊講義III",
    "section": "評価",
    "text": "評価\n平常点と期末レポート\n\n平常点: 30%\n\n授業への参加度 (質問/発言)\nSlackでの参加度も含む\n\n期末レポート: 70%\n\n提出方法、期限は講義最終日に告知"
  },
  {
    "objectID": "slide/slide01.html#レポート",
    "href": "slide/slide01.html#レポート",
    "title": "方法論特殊講義III",
    "section": "レポート",
    "text": "レポート\n以下の3つのオプションから選択\n\n研究のプロポーザル\n\n本講義で紹介した手法を用いた分析のプロポーザルを作成\n実現可能性があること\n\n既存研究の再現 (replication)\n\n分析をそのまま再現\n本講義で紹介した手法を用いて再現\n\n本講義で紹介した手法を用いた2次分析"
  },
  {
    "objectID": "slide/slide01.html#前提知識",
    "href": "slide/slide01.html#前提知識",
    "title": "方法論特殊講義III",
    "section": "前提知識",
    "text": "前提知識\n本講義の前提知識\n\n仮説検定\n統計的有意性検定\n回帰分析\n電卓としてのRの使い方\n\nデータクリーニング、回帰分析、可視化などができるならベスト\n2日目にRの解説は行うが、深入りはしない(できない)\n\nhttps://bit.ly/2VPXL9x \\(\\leftarrow\\) これくらいは知っておけば2日目の内容を省略し、5日目に操作変数法について解説\n\n最低限の使い方（データの読み込みなど）は知っている前提で解説\n『私たちのR』を読もう！"
  },
  {
    "objectID": "slide/slide01.html#社会科学における因果推論の意味",
    "href": "slide/slide01.html#社会科学における因果推論の意味",
    "title": "方法論特殊講義III",
    "section": "社会科学における因果推論の意味",
    "text": "社会科学における因果推論の意味\nMorgan and Winship (2014) Counterfactuals and Causal Inference: Methods And Principles For Social Research. Cambridge.\n\nMore has been learned about causal inference in the last few decades than sum total of everything that had been learned about it in all prior recorded history. (Gary King)"
  },
  {
    "objectID": "slide/slide01.html#相関から因果へ",
    "href": "slide/slide01.html#相関から因果へ",
    "title": "方法論特殊講義III",
    "section": "相関から因果へ",
    "text": "相関から因果へ\n原因 (X) と結果 (Y) の関係\n\n\n\n\n\n\n\n\n\n\n\n\n年齢(世代)と投票率の関係（架空の例）\n\n年齢が上がると高い投票率\n\n相関関係\n統計分析から得られる結果は相関関係のみ\n\n理論/デザインを用いて相関関係が因果関係であることを説得\n相関関係→因果関係における障害物\n\nSelection Bias\nSimultaneity\nSpurious Correlation\nReverse Causality\nOmitted Variable Biasなど"
  },
  {
    "objectID": "slide/slide01.html#同時性",
    "href": "slide/slide01.html#同時性",
    "title": "方法論特殊講義III",
    "section": "同時性",
    "text": "同時性\nSimultaneity\n\n\n\n\n\n\n\n\n原因と結果の間に双方向の因果関係が存在\n\n例) お酒 (原因; X) とストレス (結果; Y) の関係\n\n酒を飲むとストレスが貯まる\nストレス解消のために酒を飲む\n酒を飲むとストレスが貯まる\nストレス解消のために酒を飲む\n酒を飲むとストレスが貯まる\n…\n\n\\(\\rightarrow\\) 地獄のような無限ループ\n\n\\(\\Rightarrow\\) 酒がストレスに与える影響は?"
  },
  {
    "objectID": "slide/slide01.html#見かけ上の相関",
    "href": "slide/slide01.html#見かけ上の相関",
    "title": "方法論特殊講義III",
    "section": "見かけ上の相関",
    "text": "見かけ上の相関\nSpurious Correlation、擬似相関\n\nたまたま相関関係がある場合\n\n例) メイン州の離婚率一人当たりマーガリンの消費量"
  },
  {
    "objectID": "slide/slide01.html#見かけ上の相関-1",
    "href": "slide/slide01.html#見かけ上の相関-1",
    "title": "方法論特殊講義III",
    "section": "見かけ上の相関",
    "text": "見かけ上の相関\nSpurious Correlation、擬似相関\n\n共通の要因からの影響\n\n例) ビール消費量とアイスクリーム消費量"
  },
  {
    "objectID": "slide/slide01.html#見かけ上の相関-2",
    "href": "slide/slide01.html#見かけ上の相関-2",
    "title": "方法論特殊講義III",
    "section": "見かけ上の相関",
    "text": "見かけ上の相関\nSpurious Correlation、擬似相関\n\n共通の要因からの影響\n\n例) ゲームをやると身長が伸びる説"
  },
  {
    "objectID": "slide/slide01.html#逆の因果",
    "href": "slide/slide01.html#逆の因果",
    "title": "方法論特殊講義III",
    "section": "逆の因果",
    "text": "逆の因果\nReverse Causality\n\n例) 心臓移植と生存率の例\n\n\n\n\n\n\n5年後に死亡\n5年後に生存\n\n\n\n\n心臓移植を\n受けた\n10名\n5名\n\n\n\n受けなかった\n5名\n10名\n\n\n\n\n心臓移植を受けたら死亡確率が上がる?\n死亡確率が高い人が心臓移植を受ける?"
  },
  {
    "objectID": "slide/slide01.html#逆の因果-1",
    "href": "slide/slide01.html#逆の因果-1",
    "title": "方法論特殊講義III",
    "section": "逆の因果",
    "text": "逆の因果\nReverse Causality\n\n「人気だから4文字に略されるのか、4文字に略せるからヒットす るのか、どっちなんでしょうね」"
  },
  {
    "objectID": "slide/slide01.html#欠落変数バイアス",
    "href": "slide/slide01.html#欠落変数バイアス",
    "title": "方法論特殊講義III",
    "section": "欠落変数バイアス",
    "text": "欠落変数バイアス\nOmitted Variable Bias\n例) 真のモデルが\\(Y = \\beta_0 + \\beta_1 \\cdot X + \\beta_2 \\cdot Z + e\\)の場合\n\n\n\n\n\n\n\n\n\n\n\n\n\nモデルに\\(Z\\)が含まれていなくても\\(\\beta_1\\)の推定値は変化\\(\\times\\)\n\n\\(X\\)と\\(Z\\)は独立（\\(X \\perp Z\\)）\n=\\(X\\)と\\(Z\\)の共分散が0（\\(\\sigma_{X, Z} = 0\\)）"
  },
  {
    "objectID": "slide/slide01.html#欠落変数バイアス-1",
    "href": "slide/slide01.html#欠落変数バイアス-1",
    "title": "方法論特殊講義III",
    "section": "欠落変数バイアス",
    "text": "欠落変数バイアス\nOmitted Variable Bias\n例) 真のモデルが\\(Y = \\beta_0 + \\beta_1 \\cdot X + \\beta_2 \\cdot Z + e\\)の場合\n\n\n\n\n\n\n\n\n\n\n\n\n\nモデルに \\(X2\\) が含まれていない場合、 \\(\\beta_1\\) の推定値にバイアス\n\n\\(X_1\\) と \\(X_2\\) が相関\n\\(\\sigma_{X_1, X_2} \\neq 0\\)\n\n\\(\\beta_1\\)の真の値（=不偏推定量）を推定するためには\\(X\\)と\\(Y\\)両方と相関する変数すべてが必要\n\nそもそも、「真の値」とは？\n\\(X\\)と\\(Y\\)両方と相関するすべての変数は特定可能? 測定可能?\n\n\\(\\rightarrow\\) データ分析から得られた結果はあくまでも「分析モデルが想定している世界」のものに過ぎない\n\n定量的手法は反証可能性を高めやすい手法（=科学的な手法になりやすい）であって、科学そのものを保障するものでもなく、得られた結果が真理であることを保障するものでもない。"
  },
  {
    "objectID": "slide/slide01.html#セレクションバイアス",
    "href": "slide/slide01.html#セレクションバイアス",
    "title": "方法論特殊講義III",
    "section": "セレクション・バイアス",
    "text": "セレクション・バイアス\nSelection Bias\n\n例) 職業訓練と期待収入（参考) 心臓移植）\n\n\n\n\n\n\n3年後の収入\n\n\n\n\n職業訓練を\n受けた\n6349ドル\n\n\n\n受けなかった\n6984ドル\n\n\n\n\n職業訓練を受けたら収入が上がる?\nもともと低収入の人が職業訓練を受けようとする?\n参考) 交絡因子の可能性も（就労意欲など）"
  },
  {
    "objectID": "slide/slide01.html#内生性",
    "href": "slide/slide01.html#内生性",
    "title": "方法論特殊講義III",
    "section": "内生性",
    "text": "内生性\nこれまでの多くの例は内生性（endogeneity）の問題\n\n内生性: 説明変数と誤差項間に相関が存在\n\n誤差項と相関のある説明変数: 内生変数（endogenous variable）\n\n内生性がある場合、推定値は一致推定量でも、不偏推定量でもはない\n\nサンプルサイズ（\\(N\\)）をいくら増やしても無駄\n\n内生性の原因\n\n同時性\n欠落変数バイアス\n測定誤差\nセレクション・バイアスなど\n\n最近の教科書はこれはすべてをセレクション・バイアスや欠落変数バイアスでまとめる傾向"
  },
  {
    "objectID": "slide/slide01.html#相関から因果へ-1",
    "href": "slide/slide01.html#相関から因果へ-1",
    "title": "方法論特殊講義III",
    "section": "相関から因果へ",
    "text": "相関から因果へ\n内生性の除外 \\(\\rightarrow\\) 因果効果の推定"
  },
  {
    "objectID": "slide/slide01.html#因果関係の例",
    "href": "slide/slide01.html#因果関係の例",
    "title": "方法論特殊講義III",
    "section": "因果関係の例",
    "text": "因果関係の例\nソンさんの講義を履修することで期待年収が上がるか\n\n藤村君の場合: ソンさんの講義を履修し、年収が5000万円に\n\nソンさんの授業のおかげで富裕層になった.font50[(次は社交界進出)]\n友達に教えてあげよう\n\n\n講義履修の効果\n\n処置: ソンさんの講義を履修するか否か\n効果: 履修した場合の年収 − 履修しなかった場合の年収"
  },
  {
    "objectID": "slide/slide01.html#因果関係の例-1",
    "href": "slide/slide01.html#因果関係の例-1",
    "title": "方法論特殊講義III",
    "section": "因果関係の例",
    "text": "因果関係の例\nソンさんの講義を履修することで期待年収が上がるか\n\n藤村君の場合: ソンさんの講義を履修し、年収が5000万円に\n\nソンさんの授業のおかげで富裕層になった（次は社交界進出）\n友達に教えてあげよう\n\n\n講義履修の効果（ケース1）\n\n藤村君がソンさんの授業を履修しなくても年収5000万円なら\n\nソンさんの講義の因果効果は0\n\n\n\n\n\n\n履修しなかった場合の年収(A)\n履修した場合の年収(B)\n効果(B-A)\n\n\n\n\nケース1\n5000万\n5000万\n0万"
  },
  {
    "objectID": "slide/slide01.html#因果関係の例-2",
    "href": "slide/slide01.html#因果関係の例-2",
    "title": "方法論特殊講義III",
    "section": "因果関係の例",
    "text": "因果関係の例\nソンさんの講義を履修することで期待年収が上がるか\n\n藤村君の場合: ソンさんの講義を履修し、年収が5000万円に\n\nソンさんの授業のおかげで富裕層になった（次は社交界進出）\n友達に教えてあげよう\n\n\n講義履修の効果（ケース2）\n\n藤村君がソンさんの授業を履修しなかった場合、年収1000万円なら\n\nソンさんの講義の因果効果は4000万円\n一生ソンさんには頭が上がらない\n\n\n\n\n\n\n履修しなかった場合の年収(A)\n履修した場合の年収(B)\n効果(B-A)\n\n\n\n\nケース2\n1000万\n5000万\n4000万"
  },
  {
    "objectID": "slide/slide01.html#因果関係の例-3",
    "href": "slide/slide01.html#因果関係の例-3",
    "title": "方法論特殊講義III",
    "section": "因果関係の例",
    "text": "因果関係の例\nソンさんの講義を履修することで期待年収が上がるか\n\n藤村君の場合: ソンさんの講義を履修し、年収が5000万円に\n\nソンさんの授業のおかげで富裕層になった（次は社交界進出）\n友達に教えてあげよう\n\n\n講義履修の効果（ケース3）\n\n藤村君がソンさんの授業を履修しなかった場合、年収8000万円なら\n\nソンさんの講義の因果効果は-3000万\nソンさんは悪くない\n\n\n\n\n\n\n履修しなかった場合の年収(A)\n履修した場合の年収(B)\n効果(B-A)\n\n\n\n\nケース3\n8000万\n5000万\n-3000万"
  },
  {
    "objectID": "slide/slide01.html#因果関係の例-4",
    "href": "slide/slide01.html#因果関係の例-4",
    "title": "方法論特殊講義III",
    "section": "因果関係の例",
    "text": "因果関係の例\nソンさんの講義を履修することで期待年収が上がるか\n\n藤村君の場合: ソンさんの講義を履修し、年収が5000万円に\n\nソンさんの授業のおかげで富裕層になった（次は社交界進出）\n友達に教えてあげよう\n\n\n講義履修の効果\n\nソンさんの講義を履修しなかった場合の藤村君の年収は…?\n\n個人（藤村君）における処置効果を推定する際にはこれが不可欠\n\n\n\n\n\n\n履修しなかった場合の年収(A)\n履修した場合の年収(B)\n効果(B-A)\n\n\n\n\nケース1\n5000万\n5000万\n0万\n\n\nケース2\n1000万\n5000万\n4000万\n\n\nケース3\n8000万\n5000万\n-3000万"
  },
  {
    "objectID": "slide/slide01.html#潜在的結果枠組み",
    "href": "slide/slide01.html#潜在的結果枠組み",
    "title": "方法論特殊講義III",
    "section": "潜在的結果枠組み",
    "text": "潜在的結果枠組み\nNeyman-Rubin-HollandのPotential Outcome Framework\n\n\\(i\\) : 学生ID ( \\(i = 1,2,3,...,N\\) )\n\\(T\\) : 処置\n\n学生 \\(i\\) が謎の薬を飲んだ ( \\(T_i = 1\\) )\n学生 \\(i\\) が謎の薬を飲まなかった ( \\(T_i = 0\\) )\n\n\\(Y_i(T_i = 1)\\) : 学生 \\(i\\) が謎の薬を飲んだ場合の数学成績\n\\(Y_i(T_i = 0)\\) : 学生 \\(i\\) が謎の薬を飲まなかった場合の数学成績\n\\(ITE_i = Y_i(T_i = 1) − Y_i(T_i = 0)\\) : 学生iにおける薬の処置効果\n\nITE: Individual Treatment Effect (個人における処置効果)\n\n= UTE: Unit Treatment Effect\n\n全く同じ個人において薬を飲んだ場合と飲まなかった場合の数学成績の差 = 謎の薬の因果効果"
  },
  {
    "objectID": "slide/slide01.html#薬の効果は",
    "href": "slide/slide01.html#薬の効果は",
    "title": "方法論特殊講義III",
    "section": "薬の効果は?",
    "text": "薬の効果は?\nITEの平均値は−4であり、個人差はあるものの、全体的に薬は成績に負の影響\n\n\n\n\\(i\\)\n\\(T_i\\)\n\\(Y_i(T_i = 0)\\)\n\\(Y_i(T_i = 1)\\)\n\\(ITE_i\\)\n\n\n\n\n1\n1\n77\n85\n8\n\n\n2\n1\n49\n59\n10\n\n\n3\n1\n60\n66\n6\n\n\n4\n0\n61\n44\n-17\n\n\n5\n0\n50\n39\n-11\n\n\n6\n0\n75\n55\n-20\n\n\n平均\n\n62\n58\n-4"
  },
  {
    "objectID": "slide/slide01.html#因果推論の根本問題-1",
    "href": "slide/slide01.html#因果推論の根本問題-1",
    "title": "方法論特殊講義III",
    "section": "因果推論の根本問題",
    "text": "因果推論の根本問題\nしかし、観察できるのは\\(Y_i(T_i = 1)\\)か\\(Y_i(T_i = 0)\\)、片方のみ\n\n\\(Y_i(T_i = 0)\\)は反実仮想（counterfactual）であり、観察不可 (\\(i \\in \\{1,2,3\\}\\))\n\\(Y_i(T_i = 1)\\)も反実仮想(\\(i \\in \\{4,5,6\\}\\))\n\n\n\n\n\\(i\\)\n\\(T_i\\)\n\\(Y_i(T_i = 0)\\)\n\\(Y_i(T_i = 1)\\)\n\\(ITE_i\\)\n\n\n\n\n1\n1\n?\n85\n?\n\n\n2\n1\n?\n59\n?\n\n\n3\n1\n?\n66\n?\n\n\n4\n0\n61\n?\n?\n\n\n5\n0\n50\n?\n?\n\n\n6\n0\n75\n?\n?\n\n\n平均\n\n62\n70\n8\n\n\n\n\n\n「みんなで薬やろうぜ」って言っていいのか"
  },
  {
    "objectID": "slide/slide01.html#世界一受けたいソンさんの授業",
    "href": "slide/slide01.html#世界一受けたいソンさんの授業",
    "title": "方法論特殊講義III",
    "section": "世界一受けたいソンさんの授業",
    "text": "世界一受けたいソンさんの授業\n履修者5名と非履修者5名の年収の比較\n\nITEは分からないが、平均値の差分を見ると、+100万円の効果\n\n\n\n\n\\(i\\)\n\\(T_i\\)\n\\(Y_i(T_i = 0)\\)\n\\(Y_i(T_i = 1)\\)\n\\(ITE_i\\)\n\n\n\n\n1\n1\n?\n700\n?\n\n\n2\n1\n?\n1000\n?\n\n\n3\n1\n?\n550\n?\n\n\n4\n1\n?\n350\n?\n\n\n5\n1\n?\n400\n?\n\n\n6\n0\n400\n?\n?\n\n\n7\n0\n500\n?\n?\n\n\n8\n0\n350\n?\n?\n\n\n9\n0\n750\n?\n?\n\n\n10\n0\n500\n?\n?\n\n\n平均\n\n500\n600\n100"
  },
  {
    "objectID": "slide/slide01.html#世界一受けたいソンさんの授業-1",
    "href": "slide/slide01.html#世界一受けたいソンさんの授業-1",
    "title": "方法論特殊講義III",
    "section": "世界一受けたいソンさんの授業",
    "text": "世界一受けたいソンさんの授業\n履修者5名と非履修者5名の年収の比較（ケース1）\n\nITEは分からないが、平均値の差分を見ると、+100万円の効果\n80万円の価値があるソンさんの講義、みんなで履修しよう!\n\n\n\n\n\\(i\\)\n\\(T_i\\)\n\\(Y_i(T_i = 0)\\)\n\\(Y_i(T_i = 1)\\)\n\\(ITE_i\\)\n\n\n\n\n1\n1\n550\n700\n150\n\n\n2\n1\n650\n1000\n350\n\n\n3\n1\n600\n550\n-50\n\n\n4\n1\n300\n350\n50\n\n\n5\n1\n300\n400\n100\n\n\n6\n0\n400\n300\n-100\n\n\n7\n0\n500\n700\n200\n\n\n8\n0\n350\n600\n250\n\n\n9\n0\n750\n700\n-50\n\n\n10\n0\n500\n400\n-100\n\n\n平均\n\n490\n570\n80"
  },
  {
    "objectID": "slide/slide01.html#世界一受けたいソンさんの授業-2",
    "href": "slide/slide01.html#世界一受けたいソンさんの授業-2",
    "title": "方法論特殊講義III",
    "section": "世界一受けたいソンさんの授業",
    "text": "世界一受けたいソンさんの授業\n履修者5名と非履修者5名の年収の比較（ケース2）\n\nITEは分からないが、平均値の差分を見ると、+100万円の効果\nソンさんは悪くない\n\n\n\n\n\\(i\\)\n\\(T_i\\)\n\\(Y_i(T_i = 0)\\)\n\\(Y_i(T_i = 1)\\)\n\\(ITE_i\\)\n\n\n\n\n1\n1\n800\n700\n-100\n\n\n2\n1\n650\n1000\n350\n\n\n3\n1\n600\n550\n-50\n\n\n4\n1\n400\n350\n-50\n\n\n5\n1\n350\n400\n50\n\n\n6\n0\n400\n300\n-100\n\n\n7\n0\n500\n500\n0\n\n\n8\n0\n350\n400\n50\n\n\n9\n0\n750\n500\n-250\n\n\n10\n0\n500\n400\n-100\n\n\n平均\n\n530\n510\n-20"
  },
  {
    "objectID": "slide/slide01.html#因果推論の根本問題-2",
    "href": "slide/slide01.html#因果推論の根本問題-2",
    "title": "方法論特殊講義III",
    "section": "因果推論の根本問題",
    "text": "因果推論の根本問題\n\n\\(Y_i(T_i = 1)\\)か\\(Y_i(T_i = 0)\\)、片方のみしか観察できない状態においてITEから因果効果を推定することは不可能\n\n因果推論の根本問題 (The Fundamental Problem of Causal Inference)\n\n\n\n\n解決方法\n\nもう一回、過去に戻って異なる処置を行う"
  },
  {
    "objectID": "slide/slide01.html#因果推論の根本問題-3",
    "href": "slide/slide01.html#因果推論の根本問題-3",
    "title": "方法論特殊講義III",
    "section": "因果推論の根本問題",
    "text": "因果推論の根本問題\n\n\\(Y_i(T_i = 1)\\)か\\(Y_i(T_i = 0)\\)、片方のみしか観察できない状態において、ITEから因果効果を推定することは不可能\n\nただし、のび太くん、ドラえもん、ジャイアンくんを除く\n因果推論の根本問題 (The Fundamental Problem of Causal Inference)\n\n潜在的結果を直接観察する方法\n\nただし、個々人の潜在的結果ではなく、集団における潜在的結果\n平均処置効果 (ATE; Average Treatment Effect)\n\n平均値の差分から平均的な因果効果を推定\nしかし、…\n\n無作為割当の重要性"
  },
  {
    "objectID": "slide/slide01.html#平均取るだけでok",
    "href": "slide/slide01.html#平均取るだけでok",
    "title": "方法論特殊講義III",
    "section": "平均取るだけでOK?",
    "text": "平均取るだけでOK?\n観察されたデータから差分を計算するだけではATEは推定不可能\n\n\n\n\\(i\\)\n\\(T_i\\)\n\\(Y_i(T_i = 0)\\)\n\\(Y_i(T_i = 1)\\)\n\\(ITE_i\\)\n\n\n\n\n1\n1\n?\n700\n?\n\n\n2\n1\n?\n1000\n?\n\n\n3\n1\n?\n550\n?\n\n\n4\n1\n?\n350\n?\n\n\n5\n1\n?\n400\n?\n\n\n6\n0\n400\n?\n?\n\n\n7\n0\n500\n?\n?\n\n\n8\n0\n350\n?\n?\n\n\n9\n0\n750\n?\n?\n\n\n10\n0\n500\n?\n?\n\n\n平均\n\n500\n600\n100"
  },
  {
    "objectID": "slide/slide01.html#信頼できるateの条件",
    "href": "slide/slide01.html#信頼できるateの条件",
    "title": "方法論特殊講義III",
    "section": "信頼できるATEの条件",
    "text": "信頼できるATEの条件\nATE 推定値の信頼性を損なう敵: 内生性 (しかも、常に存在する)\n例) やる気のある学生だけがソンさんの講義を履修した場合\n\nセレクション・バイアス\n\nソンさんの講義は鬼畜すぎるため、やる気満々の学生には役に立つものの、やる気のない学生にとってはむしろ学習意欲が低下\n\n疑似相関\n\nやる気のある学生はいろんな方面で頑張るから、将来年収が高くなる。\n\n測定誤差\n\n履修者の年収はジンバブエ・ドルで測定されている可能性も（これはないか）\n\n\n\n\n内生性は因果推論の敵! どうすれば…?\n\\(\\downarrow\\)\n無作為割当 (Random Assignment)"
  },
  {
    "objectID": "slide/slide01.html#無作為割当とは",
    "href": "slide/slide01.html#無作為割当とは",
    "title": "方法論特殊講義III",
    "section": "無作為割当とは",
    "text": "無作為割当とは\n無作為割当 (Random Assignment)\n\n処置を受けるかどうかを無作為に割り当てる方法\n\n完全無作為割当: 全ての被験者において、どのグループに属するかの確率が等しい\n\\(Pr(T_i = 1) = Pr(T_j = 1) \\text{ where } i \\neq j\\)\n\\(Pr(T_i = 0) = Pr(T_j = 0) \\text{ where } i \\neq j\\)\n無作為割当の方法は色々\n\n無作為に割り当てると、処置を受けないグループと処置を受けるグループは「集団」として同質なグループになる。\n\n受けないグループ: 統制群 (Control Group)\n受けるグループ: 処置群 (Treatment Group)\n\n一つの集団を一人の個人として扱い、ITEを測定 ⇒ ATE"
  },
  {
    "objectID": "slide/slide01.html#無作為割当の力",
    "href": "slide/slide01.html#無作為割当の力",
    "title": "方法論特殊講義III",
    "section": "無作為割当の力",
    "text": "無作為割当の力\nコインを投げ、表( \\(H\\) )なら統制群、裏( \\(T\\) )なら処置群に割当\n\n女性比率が55%、平均年齢が38歳の集団の例\n\n\n\n\nset.seed(19861008)\nData <- tibble(\n   ID = 1:20,\n   Female = sample(0:1, 20, replace = TRUE, \n                   prob = c(0.4, 0.6)),\n   Age    = round(rnorm(20, 38, 10), 0))\n\nData %>%\n   summarise(Female = mean(Female),\n             Age    = mean(Age))\n\n# A tibble: 1 × 2\n  Female   Age\n   <dbl> <dbl>\n1   0.55    38\n\n\n\n\n\n\n\n \n  \n    ID \n    Female \n    Age \n    　 \n    ID \n    Female \n    Age \n  \n \n\n  \n    1 \n    1 \n    31 \n     \n    11 \n    0 \n    38 \n  \n  \n    2 \n    1 \n    41 \n     \n    12 \n    1 \n    29 \n  \n  \n    3 \n    0 \n    31 \n     \n    13 \n    0 \n    21 \n  \n  \n    4 \n    1 \n    46 \n     \n    14 \n    0 \n    26 \n  \n  \n    5 \n    1 \n    37 \n     \n    15 \n    1 \n    36 \n  \n  \n    6 \n    1 \n    37 \n     \n    16 \n    1 \n    40 \n  \n  \n    7 \n    0 \n    30 \n     \n    17 \n    0 \n    50 \n  \n  \n    8 \n    1 \n    46 \n     \n    18 \n    0 \n    42 \n  \n  \n    9 \n    1 \n    56 \n     \n    19 \n    0 \n    29 \n  \n  \n    10 \n    0 \n    47 \n     \n    20 \n    1 \n    47"
  },
  {
    "objectID": "slide/slide01.html#無作為割当の力-1",
    "href": "slide/slide01.html#無作為割当の力-1",
    "title": "方法論特殊講義III",
    "section": "無作為割当の力",
    "text": "無作為割当の力\nコイン投げの結果\n\nset.seed(19861008)\nCoin <- sample(c(\"H\", \"T\"), 20, replace = TRUE)\nData$Coin <- Coin\n\n\n\n\n\n \n  \n    ID \n    Female \n    Age \n    Coin \n    　 \n    ID \n    Female \n    Age \n    Coin \n  \n \n\n  \n    1 \n    1 \n    31 \n    H \n     \n    11 \n    0 \n    38 \n    H \n  \n  \n    2 \n    1 \n    41 \n    T \n     \n    12 \n    1 \n    29 \n    T \n  \n  \n    3 \n    0 \n    31 \n    T \n     \n    13 \n    0 \n    21 \n    H \n  \n  \n    4 \n    1 \n    46 \n    T \n     \n    14 \n    0 \n    26 \n    T \n  \n  \n    5 \n    1 \n    37 \n    H \n     \n    15 \n    1 \n    36 \n    H \n  \n  \n    6 \n    1 \n    37 \n    H \n     \n    16 \n    1 \n    40 \n    T \n  \n  \n    7 \n    0 \n    30 \n    H \n     \n    17 \n    0 \n    50 \n    T \n  \n  \n    8 \n    1 \n    46 \n    T \n     \n    18 \n    0 \n    42 \n    T \n  \n  \n    9 \n    1 \n    56 \n    H \n     \n    19 \n    0 \n    29 \n    H \n  \n  \n    10 \n    0 \n    47 \n    H \n     \n    20 \n    1 \n    47 \n    H"
  },
  {
    "objectID": "slide/slide01.html#無作為割当の力-2",
    "href": "slide/slide01.html#無作為割当の力-2",
    "title": "方法論特殊講義III",
    "section": "無作為割当の力",
    "text": "無作為割当の力\n統制群と処置群が比較的同質的なグループに\n\n統制群（11名）: 女性比率が54.5%、平均年齢が37.2歳\n処置群 (9名): 女性比率が55.6%、平均年齢が39歳\n\n\nData %>%\n  group_by(Coin) %>%\n  summarise(Female = mean(Female),\n            Age    = mean(Age),\n            N      = n())\n\n# A tibble: 2 × 4\n  Coin  Female   Age     N\n  <chr>  <dbl> <dbl> <int>\n1 H      0.545  37.2    11\n2 T      0.556  39       9"
  },
  {
    "objectID": "slide/slide01.html#無作為割当の力-3",
    "href": "slide/slide01.html#無作為割当の力-3",
    "title": "方法論特殊講義III",
    "section": "無作為割当の力",
    "text": "無作為割当の力\n集団として処置群と統制群は、母集団とほぼ同質\n\n母集団:女性率が55%、平均年齢が38歳\n統制群:女性率が54.5%、平均年齢が37.2歳\n処置群:女性率が55.6%、平均年齢が39歳\n\\(n \\rightarrow \\infty\\) なら2つのグループはより同質的に（大数の弱法則）\n統制群と処置群、母集団はそれぞれ交換可能 (exchangeable)\n\n処置群に処置を与えること = 母集団全体に処置を与えること\n統制群に処置を与えないこと = 母集団全体に処置を与えないこと\n\n統制群と処置群の比較で集団を一つの単位としたITE (= ATE)が推定可能\n\n処置を与えた母集団 vs. 処置を与えなかった母集団"
  },
  {
    "objectID": "slide/slide01.html#無作為割当の力-4",
    "href": "slide/slide01.html#無作為割当の力-4",
    "title": "方法論特殊講義III",
    "section": "無作為割当の力",
    "text": "無作為割当の力\n無作為割当は均質な複数のグループを作る手法\n\n講義履修と年収の例だと、無作為割当をすることによって …\n\n各グループにやる気のある学生とない学生が均等に\n\nセレクション・バイアス、擬似相関の除去\n\nジンバブエ・ドルで測定される学生も均等に（これはないか）\n\n測定誤差の除去\n\n\n内生性:処置変数（講義の履修）と誤差項（やる気など）間の相関\n\nコイン投げの結果は被験者（学生）の性質と無関係に行われるため、誤差項と相関がない。\n外生変数 (Exogenous variable)\n学生の性質 (X) と処置有無 (T) は独立している ⇒ \\(X \\perp T\\)\n\n\n\n\n無作為割当は内生性を除去する最良の手法"
  },
  {
    "objectID": "slide/slide01.html#無作為抽出と無作為割当",
    "href": "slide/slide01.html#無作為抽出と無作為割当",
    "title": "方法論特殊講義III",
    "section": "無作為抽出と無作為割当",
    "text": "無作為抽出と無作為割当\n\n無作為抽出によってサンプル（標本）と母集団が交換可能（実はここが難しい）\n無作為割当によって各グループとサンプルに交換可能（=各グループ間で交換可能）\n無作為抽出&無作為割当によって各グループと母集団が交換可能（グループへの刺激=母集団への刺激）"
  },
  {
    "objectID": "slide/slide01.html#ランダム化比較試験とは",
    "href": "slide/slide01.html#ランダム化比較試験とは",
    "title": "方法論特殊講義III",
    "section": "ランダム化比較試験とは",
    "text": "ランダム化比較試験とは\nRandomized Controlled Trial (RCT)\n\n無作為割当で複数のグループを作り上げた上で、異なる刺激・処置を与え、結果を観察する手法\n\n社会科学でいう「実験」の多くはこれを指す\n因果推論の王道\n\n因果効果をもたらす(と想定される)処置変数が外生的\n\nグループ間における結果変数の差 = 因果効果\n\nデータ生成過程(Data Generating Process; DGP)への直接介入\n\n「真のモデル」が分かる\n\n\n実験の方法\n\nフィールド実験\n実験室実験\nサーベイ実験\n\nSONG Jaehyun・秦正樹. 2020. 「オンライン・サーベイ実験の方法: 理論編」『理論と方法』35 (1): 92-108.\n秦正樹・SONG Jaehyun. 2020. 「オンライン・サーベイ実験の方法: 実践編」『理論と方法』35 (1): 109-127."
  },
  {
    "objectID": "slide/slide01.html#データ生成過程への介入",
    "href": "slide/slide01.html#データ生成過程への介入",
    "title": "方法論特殊講義III",
    "section": "データ生成過程への介入",
    "text": "データ生成過程への介入\n以下のデータ生成過程を仮定\n\\[\n\\text{Income} = \\beta_0 + \\beta_1 \\cdot \\text{Quant} + \\varepsilon\n\\]\n\nIncome: 10年後の年収 (\\(\\in [0, \\infty)\\))\nQuant:ソンさんの講義を履修したか否か (\\(\\in \\{0, 1\\})\\) )\n誤差項( \\(\\varepsilon\\) )には「やる気」や「真面目さ」が含まれるため、Quantと相関がある (\\(\\rightarrow\\) 内生性)\n無作為割当で受講有無を決めると、「やる気」や「真面目さ」はQunatと無関係 (独立) になる\n\n例) 受講有無をコイン投げで決める場合、コインの結果は誤差項（やる気や真面目さ）と独立（ただし、全員がコイン投げの結果に従うと仮定）\n\\(\\Rightarrow\\) 内生性がなくなる!"
  },
  {
    "objectID": "slide/slide01.html#rctの例",
    "href": "slide/slide01.html#rctの例",
    "title": "方法論特殊講義III",
    "section": "RCTの例",
    "text": "RCTの例\nBertand and Mullainathan (2004)\n\n労働市場における人種差別\n約5000人分の架空の履歴書を求人中の会社へ送る\n\n履歴書の内容 (性別、人種、能力など) は完全無作為\n履歴書に人種は記入できないため、白人っぽい名前 (Emily など)、黒人っぽい名前 (Jamal など) を記入\n\n後は、返事を待つだけ\n\n処置変数: 人種 ( \\(\\in \\{\\text{black}, \\text{white}\\}\\) )\n結果変数: 連絡の有無 ( \\(\\in \\{0, 1\\}\\) )"
  },
  {
    "objectID": "slide/slide01.html#内生性の可能性",
    "href": "slide/slide01.html#内生性の可能性",
    "title": "方法論特殊講義III",
    "section": "内生性の可能性",
    "text": "内生性の可能性\n\n\n\n\n\n\n\n\n\n\n\n\n誤差項 (\\(\\varepsilon\\)) には教育水準、親の所得、居住地などが含まれる可能性\n\n実際に人種と上記の要因には相関あり\n人種 (処置) と誤差項 (\\(\\varepsilon\\)) 間の相関関係 \\(\\rightarrow\\) 内生性\n\n黒人が採用されなかった場合 …\n\n黒人だから? \\(\\leftarrow\\) 人種差別\\(\\bigcirc\\)\n教育水準が低いから \\(\\leftarrow\\) 人種差別\\(\\times\\)\n\n\n\n \\(\\Rightarrow\\) 内生性がある限り、因果効果の識別は困難  \\(\\Rightarrow\\) ケースによって政策的含意が変わる。"
  },
  {
    "objectID": "slide/slide01.html#rctの力",
    "href": "slide/slide01.html#rctの力",
    "title": "方法論特殊講義III",
    "section": "RCTの力",
    "text": "RCTの力\n\n\n\n\n白人の名前\n黒人の名前\n\n\n\n\nFemale\n76.42%\n77.45%\n\n\nHighQuality\n50.23%\n50.23%\n\n\nCall Rate\n9.65%\n6.45%\n\n\n計 (人)\n2435\n2435\n\n\n\n\n無作為割当の結果、人種と性別・能力の相関がほぼ0に\n\n内生性のない状態\nこの場合、労働市場における人種の因果効果は\n\nATE = 黒人の平均連絡率 − 白人の平均連絡率\n黒人という理由だけで会社から連絡が来る確率が 3.2%p\\(\\downarrow\\)\n-3.2%p: 人種の因果効果 or 処置効果 (treatment effect)"
  },
  {
    "objectID": "slide/slide01.html#バランスチェック",
    "href": "slide/slide01.html#バランスチェック",
    "title": "方法論特殊講義III",
    "section": "バランスチェック",
    "text": "バランスチェック\n無作為割当が行われているか否かを確認\n\n\n\n\n\n\n\n\n\n\n\n\n標準化差分を使用\n\nStandardized Bias (or Difference)\n\nサンプルサイズの影響\\(\\times\\)\n統計的検定ではない\n\n\\(t\\) 検定、ANOVA、 \\(\\chi^2\\) 検定は\\(\\times\\)\n\nバランスチェックに統計的有意性検定は使わない\n\n{cobalt}、{BalanceR}など"
  },
  {
    "objectID": "slide/slide01.html#標準化差分について",
    "href": "slide/slide01.html#標準化差分について",
    "title": "方法論特殊講義III",
    "section": "標準化差分について",
    "text": "標準化差分について\n連続変数\n\\[\n\\text{SB}_{T-C} = 100 \\cdot \\frac{\\bar{X}_T - \\bar{X}_C}{\\sqrt{0.5 \\cdot (s_T^2 + s_C^2)}}\n\\]\n二値変数\n\\[\n\\text{SB}_{T-C} = 100 \\cdot \\frac{\\bar{X}_T - \\bar{X}_C}{\\sqrt{0.5 \\cdot (\\bar{X}_T(1-\\bar{X}_T) + \\bar{X}_C(1-\\bar{X}_C))}}\n\\]\n\n\\(\\bar{X}_T\\) : 処置群におけるXの平均値\n\\(s_T^2\\) : 処置群におけるXの分散\n|SB|が小さいほどバランス\n\n明確な基準はないが、3、5、10、25などを使用\n\nグループが3つ以上の場合、それぞれのペアで実行"
  },
  {
    "objectID": "slide/slide01.html#因果効果の推定",
    "href": "slide/slide01.html#因果効果の推定",
    "title": "方法論特殊講義III",
    "section": "因果効果の推定",
    "text": "因果効果の推定\n\n方法1: グループ間の結果変数の差分の検定 (\\(t\\)検定)\n\n因果効果 (ATE): \\(\\mathbb{E}[\\mbox{Call}|\\mbox{Race = Black}] - \\mathbb{E}[\\mbox{Call}|\\mbox{Race = White}] = -0.032\\)\nATE = 0の帰無仮説の検定\n\n\\(t_{\\text{df} = 4711.7} = −4.117\\); \\(p\\) < 0.001; 95% CI = [−0.047, −0.017]\n\n応答変数の尺度に応じてノンパラメトリック分析\n\n方法2: 単回帰分析 (線形 or ロジスティックス/プロビット)\n\n\n\n\n\n\n線形回帰分析（LPM）\n\n\nCovriates\nEst.\nS.E.\n\n\n\n\nIntercept\n0.064\n0.006\n\n\nRace: White\n0.032\n0.008\n\n\n\n\n\n\nロジスティック回帰分析\n\n\nCovriates\nEst.\nS.E.\n\n\n\n\nIntercept\n-2.675\n0.083\n\n\nRace: White\n0.438\n0.107\n\n\n\n\n\n\nプロビット回帰分析\n\n\nCovriates\nEst.\nS.E.\n\n\n\n\nIntercept\n-1.518\n0.039\n\n\nRace: White\n0.21654\n0.053\n\n\n\n\n\n\n\n\nFreedman, David A. 2008. “Randomization Does Not Justify Logistic Regression,” Statistical Science Statistical Science, 23(2): 237-249.\n\nLogit: 一致推定量\\(\\times\\) & 不偏推定量\\(\\times\\)\nLinear: 一致推定量\\(\\bigcirc\\) & 不偏推定量\\(\\times\\)\n一致性と不偏性の違いについて"
  },
  {
    "objectID": "slide/slide01.html#因果効果の推定-重回帰分析は",
    "href": "slide/slide01.html#因果効果の推定-重回帰分析は",
    "title": "方法論特殊講義III",
    "section": "因果効果の推定: 重回帰分析は?",
    "text": "因果効果の推定: 重回帰分析は?\n無作為割当のおかげですべての変数が互いに独立\n\n重回帰分析をしても人種のATEは変化しない (OVB がない)\n\n無作為割当の場合、回帰はしてもしなくても良い\n\n現実的に完全にバランスが取れていないため、若干の変化はある\n\n\n\n\nCovriates\nEst.\nS.E.\n\n\n\n\nIntercept\n0.057\n0.007\n\n\nRace: White\n0.032\n0.08\n\n\nFemale\n0.007\n0.009\n\n\nMilitary\n-0.027\n0.014\n\n\nEducation\n-0.002\n0.005\n\n\nHigh Quality\n0.019\n0.008"
  },
  {
    "objectID": "slide/slide01.html#因果効果の不均一性",
    "href": "slide/slide01.html#因果効果の不均一性",
    "title": "方法論特殊講義III",
    "section": "因果効果の不均一性",
    "text": "因果効果の不均一性\n因果効果が下位グループによって異なる場合\n\n因果効果の不均一性 (heterogeneous treatment effects)\n\n例) 性別によって薬の効果が異なる場合\n薬の効果が男性なら 1、女性なら 2 の場合\n\n男女比が1:1なら、ATEは1.5に\n\n薬の効果が男性なら 4、女性なら-1 の場合\n\n男女比が1:1なら、ATEは1.5だが…\n\n\n方法1: 男女に分けてATEを推定\n方法2: 性別と処置有無の交差項を投入した重回帰分析\n参考) Bryan, Christopher J., Elizabeth Tipton and David S. Yeager. 2021. “Behavioural science is unlikely to change the world without a heterogeneity revolution,” Nature Human Behaviour. 5: 980–989."
  },
  {
    "objectID": "slide/slide01.html#因果効果の不均一性-1",
    "href": "slide/slide01.html#因果効果の不均一性-1",
    "title": "方法論特殊講義III",
    "section": "因果効果の不均一性",
    "text": "因果効果の不均一性\n方法1: 男女に分けてATEを推定\n\n\n\n\n統制群\n処置群\nATE\n\\(t\\)\n\\(p\\)\n\n\n\n\n男性のみ\n0.611\n1.561\n0.951\n-7.521\n< 0.001\n\n\n女性のみ\n0.493\n2.480\n1.987\n-15.573\n< 0.001\n\n\n全体\n0.551\n2.057\n1.506\n-15.945\n< 0.001"
  },
  {
    "objectID": "slide/slide01.html#因果効果の不均一性-2",
    "href": "slide/slide01.html#因果効果の不均一性-2",
    "title": "方法論特殊講義III",
    "section": "因果効果の不均一性",
    "text": "因果効果の不均一性\n方法2: 性別と処置有無の交差項を投入した重回帰分析\n\n\n\n\n\n\n \n  \n      \n    Model 1 \n  \n \n\n  \n    (Intercept) \n    0.611 (0.091) \n  \n  \n    Treatment \n    0.951 (0.131) \n  \n  \n    Female \n    −0.117 (0.127) \n  \n  \n    Treatment × Female \n    1.036 (0.180) \n  \n  \n    Num.Obs. \n    500 \n  \n  \n    R2 \n    0.401 \n  \n  \n    R2 Adj. \n    0.398 \n  \n  \n    AIC \n    1431.3 \n  \n  \n    BIC \n    1452.3 \n  \n  \n    Log.Lik. \n    −710.629 \n  \n  \n    F \n    110.905 \n  \n  \n    RMSE \n    1.00 \n  \n\n\n\n\n\n\n\\[\n\\begin{align}\n\\hat{y} & = \\beta_0 + \\beta_1 \\mbox{Treatment} + \\beta_2 \\mbox{Female} + \\beta_3 \\mbox{Treatment} \\cdot \\mbox{Female} \\\\\n& = \\beta_0 + (\\beta_1 + \\beta_3 \\mbox{Female}) \\mbox{Treatment} + \\beta_2 \\mbox{Female}.\n\\end{align}\n\\]\n\n男性のATE: \\(\\beta_1 + \\beta_3 \\cdot 0 = \\beta_1\\) = 0.951\n女性のATE: \\(\\beta_1 + \\beta_3 \\cdot 1 = \\beta_1 + \\beta_3\\) = 1.987"
  },
  {
    "objectID": "slide/slide01.html#因果推論の前提sutva",
    "href": "slide/slide01.html#因果推論の前提sutva",
    "title": "方法論特殊講義III",
    "section": "因果推論の前提:SUTVA",
    "text": "因果推論の前提:SUTVA\nStable Unit Treatment Value Assumption\n\n非干渉性処置の無分散性\n\n\n非干渉性: 他人の処置・統制有無が処置効果に影響を与えないこと\n\n例) AさんITEは\n\n例1) Bさんが統制群の場合は10、処置群の場合は5 \\(\\leftarrow\\)  \n例2) Bさんが統制群の場合も、処置群の場合も、5 \\(\\leftarrow\\)  \n\n\n\n\n\n\n\n例1\n\n\n\nAさんが統制群\nAさんが処置群\n\n\n\n\nBさんが統制群\n0\n10\n\n\nBさんが処置群\n15\n20\n\n\n\n\n\n\n例2\n\n\n\nAさんが統制群\nAさんが処置群\n\n\n\n\nBさんが統制群\n5\n10\n\n\nBさんが処置群\n15\n20\n\n\n\n\n\n\n\n\n\n処置の無分散性: 同じグループに属する対象は同じ処置を受けること\n\n手術の場合: 医者、設備、手順、環境など\n投票参加: 当日、期日前など\n\n\n\n\n\nサーベイ実験では問題にならない場合が多い\n\n実験室実験、フィールド実験の場合、「非干渉性」には気をつける\n例) 隣の人が見てるのとと私が見てるのが違いますが…?"
  },
  {
    "objectID": "slide/slide01.html#二重盲検法",
    "href": "slide/slide01.html#二重盲検法",
    "title": "方法論特殊講義III",
    "section": "二重盲検法",
    "text": "二重盲検法\n二重盲検法 (Double Blind Test):ある被験者がどのような処置を受けているかについて研究者と被験者両方において不明な状態で実験を行う\n\n二重盲検法を使えば以下の問題点に対処することが可能\n\nプラセボ効果 (placebo effect):偽薬が与えられても、薬だと信じ込む 事によって何らかの効果が生じる\nホーソン効果 (Hawthorne effect):自分が観察されていることを認知さ れることによって何らかの効果が生じる\n観察者効果 (observer/experimenter effect):研究者の期待により被験者へ の対応が異なったり、被験者がその期待に添えるように行動すること"
  },
  {
    "objectID": "slide/slide01.html#データ",
    "href": "slide/slide01.html#データ",
    "title": "方法論特殊講義III",
    "section": "データ",
    "text": "データ\nこれまで紹介した例題\n\n労働市場と人種差別: Day1_Data1.dta\n\nMarianne Bertrand and Sendhil Mullainathan. 2004. “Are Emily and Greg More Employable Than Lakisha and Jamal? A Field Experiment on Labor Market Discrimination.” American Economic Review. 94(4) pp. 991–1013\n\n処置効果の不均一性: Day1_Data2.csv\n\n架空データ\n\n\nLab Session用のデータ (第2講)\n\n社会的圧力と投票参加: Day1_Data3.csv\n\nAlan S. Gerber, Donald P. Green, and Christopher W. Larimer. 2008. “Social Pressure and Voter Turnout: Evidence from a Large-Scale Field Experiment.” American Political Science Review. 102(1) pp. 33–48"
  },
  {
    "objectID": "slide/slide01.html#バランスチェック-1",
    "href": "slide/slide01.html#バランスチェック-1",
    "title": "方法論特殊講義III",
    "section": "バランスチェック",
    "text": "バランスチェック\n処置が複数の場合、組み合わせごとに標準化差分を計算"
  },
  {
    "objectID": "slide/slide01.html#処置効果の可視化",
    "href": "slide/slide01.html#処置効果の可視化",
    "title": "方法論特殊講義III",
    "section": "処置効果の可視化",
    "text": "処置効果の可視化"
  },
  {
    "objectID": "slide/slide01.html#実習内容",
    "href": "slide/slide01.html#実習内容",
    "title": "方法論特殊講義III",
    "section": "実習内容",
    "text": "実習内容\n\nRの導入\n\nR + RStudioがインストールされていない場合、NIIオンライン分析システムを利用する。\n\nRの基礎（プロジェクト管理、データの読み込みなど）\n記述統計量の計算\nバランスチェック\n処置効果の推定\n処置効果の報告\n\n\n\n\nhttps://www.jaysong.net/kobe-ci"
  },
  {
    "objectID": "intro/filesystem.html",
    "href": "intro/filesystem.html",
    "title": "本講義のためのファイル管理術",
    "section": "",
    "text": "PC内に存在するほとんどのファイルは「名前.拡張子」と名付けられている1。名前の拡張子は.で区切られており、名前は英数字と_のみで構成することを推奨する（ファイル名に.が推奨されない理由の一つが名前と拡張子を区分する文字として使われるからだ）。ここで注目したいのはファイルの名前でなく、拡張子のことだ。拡張子とはファイルの特徴を示すものである。たとえば、拡張子が.htmlであれば、ウェブページ形式を意味し、.pngなら図、.pdfなら図・文書、.exeなら実行ファイル、.dmgならディスクイメージを意味する。ファイル名がFigure01.pngならFigure01という名の画像ファイルであることを意味する2。この拡張子によって、パソコンは当該ファイルをどのアプリケーションで開くかを判定する。.exeファイルをダブルクリックするとアプリケーションが立ち上がるし、.pdfファイルをダブルクリックするとPDFビュアーソフトが起動され、中身が表示される。\n　これは拡張子を変えると問題が生じ得ることを意味する。画像ファイルであるFigure01.pngのファイル名を動画ファイル拡張子であるMovie01.mp4に修正しても、そのファイルは動画ファイルにはならない。また、拡張子が.mp4になると、そのファイルを開く際、動画プレイヤーが起動されるが、ファイルの中身は画像ファイルのままなのでエラーが出る。したがって、拡張子は勝手に変えてはならない。たまに課題の結果物としてファイルを提出する際、自分の名前を入れたくてファイル名をXXXX.htmlからXXXX.html_Songへ変更して提出する場合がある。しかし、これは大きな間違いだ。もやはこのファイルはHTMLファイル（.html）でなく、未知のファイル形式（.html_Song）として認識され、ダブルクリックしてもPCはどのアプリケーションで開けば良いかが分からなくなる。ファイル名を修正するならXXXX_Song.htmlのように修正しよう3。\n　Rを用いたデータ分析の場面において頻繁に登場する拡張子は以下の通りである。ファイルの名前は大文字と小文字を区別するが、拡張子の場合、区別されないケースが多い。\n\n\n\n\n\n\n\n\n拡張子\n説明\n備考\n\n\n\n\n.R\nRスクリプトファイル\n\n\n\n.Rproj\nRプロジェクトファイル\n\n\n\n.Rmd\nR Markdownファイル\n\n\n\n.qmd\nQuartoファイル\nRMarkdownに似たようなもの\n\n\n.csv\n表形式ファイル\n業界標準のフォーマット\n\n\n.xlsx or .xls\n表形式ファイル\nExcelで使うフォーマット\n\n\n.dta\n表形式ファイル\nStataで使うフォーマット\n\n\n.sav\n表形式ファイル\nSPSSで使うフォーマット\n\n\n.html\nウェブページファイル\nR Markdown/QuartoをKnitした場合に得られる\n\n\n.png\n画像ファイル\n\n\n\n.pdf\n画像/文書ファイル\n画像にも文書にもなるファイル"
  },
  {
    "objectID": "intro/filesystem.html#ファイルシステム",
    "href": "intro/filesystem.html#ファイルシステム",
    "title": "本講義のためのファイル管理術",
    "section": "2 ファイルシステム",
    "text": "2 ファイルシステム\n　R上でファイルを入出力を行うためにはファイルシステム（file system）を理解する必要がある。\n\n2.1 ファイルの入出力\n　そもそも、ファイルの「入出力」とは何だろうか。これはコンピューターの構造に関わる話なので極めて難しい内容であるが、我々のような消費者（end user）側から見れば、ファイルの入力（input）とは、いわゆるファイルの読み込みを意味し、多くの場合、表形式のデータ（.csv、.xlsxなど）をR上に読み込む作業を意味する。また、ファイルの出力（output）とは、いわゆるファイルの保存。たとえば、作成したスクリプトを.R形式で保存したり、クリーニングしたデータを.csv形式で保存したり、作成した図を.png、.pdf形式で保存したらい、作成した文書を.pdf、.html形式で保存したらいすることがファイルの出力だ。\n\n\n2.2 パスとは\n　ファイルを読み込む場合はファイル名を指定する必要がある。また、ファイルを書き出す場合もファイルに名付ける必要がある。そしてファイル名は名前.拡張子である。ただし、これらのファイルは全て一箇所に集まっているわけではない。もし、全てのファイルが一箇所に集まっていると、必要なファイルを探すのは非常に難しい。通常、PC内には数万のファイルがある。これらのファイルから必要なファイルを探すのは至難の業だろう。したがって、これらのファイルをいくつかの部屋に分けて保管し、この部屋のことをフォルダー（folder）、またはディレクトリ（directory）と呼ぶ（ここでは「フォルダー」と呼ぶとする）。\n　これは我々が住んでいる居住地の「住所」と同じ概念だ。もし、日本に「都道府県」も「市区町村」も「〜丁目、〜番、〜号」という概念がないとしよう。ここでAmazonで魚を購入し、受取先を指定する場合はどうすれば良いだろうか。日本に人が数十人しか住んでいないのであれば、「XXXさんの家」と書くだけで十分かも知れない。しかし、日本には1億人以上の人がある。「ソンさんの家」と書いても届かない。届いたとしても数年、あるいは数十年後に魚の化石の状態で届くかも知れない。そもそも日本に「ソンさん」はこの授業の担当教員以外にもいくらでもいる（ちなみに송（Song; 宋・松）さんも、손（Sohn; 孫）さんも、성（Seong/Sung; 成・星）さんも、선（Sun/Seon; 宣）さんも韓国語では発音が全く別だが、日本ではソンさんになってしまう。）。それぞれの家を何かの区域内に位置づけないとモノが届くまで数年かかってしまう。そこで必要なのが住所だ。「東京都千代田区永田町1丁目7番1号の田中さん」は「東京都」、「千代田区」、「永田町」、「1丁目」、「7番」、「1号」、「田中さん」で構成される。これをファイルシステムに例えると、東京都というフォルダーの中に千代田区というフォルダーがあり、その中には永田町というフォルダー、その中に1丁目といるファルダー、…が存在する。むろん、一つのフォルダーには複数のフォルダーが存在する可能性もある。東京都のフォルダーには千代田区以外にも大田区、中野区、文京区、葛飾区といった複数のフォルダーがあり、千代田区の中にも複数のフォルダーがある。最後の「田中さん」は受け取る人、コンピューターでいるファイル名である。\n　この住所のことをコンピューターではパス（path）と呼ぶ。それぞれのフォルダーは/で区切られる（macOS/Linuxでは/、Windowsでは\\または￥; NIIオンライン分析システムはLinuxベースである）。先ほどの住所の例だと、東京都/千代田区/永田町/1丁目/7番/1号/田中さんとなる（macOS/Linuxの場合）。左に行くほど上位のフォルダーとなり、最後のものはファイル名である。ただし、コンピュターではパスの最初に/を付ける。Windowsなら主にC:\\でスタートし、C:\\東京都\\千代田区\\永田町\\1丁目\\7番\\1号\\田中さんとなる。\n　たとえば、以下のような構造でファイルが保存されているとしよう。拡張子が付いているものはファイル、それ以外はフォルダー、1行目の.は最上位フォルダーである。\n\n\n                      levelName\n1  .                           \n2   ¦--Day01                   \n3   ¦   ¦--Day01.Rproj         \n4   ¦   ¦--Script01.R          \n5   ¦   ¦--Script02.R          \n6   ¦   ¦--Data                \n7   ¦   ¦   ¦--raw_data.csv    \n8   ¦   ¦   °--cleaned_data.csv\n9   ¦   °--Figs                \n10  ¦       ¦--Figure01.png    \n11  ¦       °--Figure02.png    \n12  °--Day02                   \n13      ¦--Day02.Rproj         \n14      ¦--Script01.R          \n15      ¦--Document01.Rmd      \n16      ¦--Document01.html     \n17      ¦--Data                \n18      ¦   °--my_data.csv     \n19      °--Figs                \n20          ¦--Old             \n21          ¦   ¦--Figure01.pdf\n22          ¦   ¦--Figure02.pdf\n23          ¦   °--Figure03.pdf\n24          °--New             \n25              °--Figure01.png\n\n\n　ここでread_csv()関数を使ってDay01フォルダー内のDataフォルダー内のraw_data.csvを読み込む場合はread_csv(\"/Day01/Data/raw_data.csv\")となる。また、ggsave()を用いて、Day02内のFigs内のNew内にFigure02.pngという名で図を保存する場合は、ggsave(filename = \"/Day02/Figs/New/Figure02.png\", ...)と入力する必要がある。しかし、通常、パスを指定する際に、/（WindownならC:\\）から始めることは滅多にない。それは「作業フォルダーはパスで省略可能」だからだ。"
  },
  {
    "objectID": "intro/filesystem.html#rstudioのプロジェクト機能",
    "href": "intro/filesystem.html#rstudioのプロジェクト機能",
    "title": "本講義のためのファイル管理術",
    "section": "3 RStudioのプロジェクト機能",
    "text": "3 RStudioのプロジェクト機能\n　Rでファイルを入出力する時に頭に入れておくべき概念として「作業フォルダー（working folder/working directory）」がある。通常、Rの作業フォルダーはmacOSだと/Users/ユーザー名/、NIIオンライン分析システムだと/home/joyvan/が作業フォルダーだ。そして、パスを指定する場合、作業フォルダーは省略することができる。つまり、現在の作業フォルダーが/home/joyvan/なら\"/home/joyvan/Day01/Data/raw_data.csv\"は\"Day01/Data/raw_data.csv\"に、\"/home/joyvan/Day02/Figs/New/Figure02.png\"は\"Day02/Figs/New/Figure02.png\"に省略される。我々が郵便局で手紙を送る際、住所にわざわざ「日本国」と書かないものと同じである。作業フォルダーはRコンソール上でgetwd()と入力すれば出力される。macOSなら/Users/ユーザー名、NIIオンライン分析システムなら/home/joyvanと出力される。\n\n\n\n\n\n\n最上位フォルダーの話\n\n\n\n　macOSとLinuxに限定した話であるが、最上位フォルダーは/であり、これはシステム上の最上位フォルダーである。個人レベルの最上位フォルダーはmacOSだと/Users/ユーザー名、NIIオンライン分析システムだと/home/joyvanである。そして、この個人レベルの最上位フォルダーは~/と表記することができる。Rコンソールでgetwd()を入力し、以上のように出力されれば個人レベルの最上位フォルダー（~/）が作業フォルダーになっている理解しても良い。ちなみに、WindowsはC:\\がシステム上の最上位フォルダーである。\n\n\n　もし、自分がこれから全ての作業をDay03という名のフォルダー内で完結するとする。つまり、保存するスクリプト（たとえば、Script.R）もDay03に保存し、図（たとえば、FigureA.png）はDay03のFigsフォルダーに、読み込む表形式データ（たとえば、Day03_Data.csv）もDay03の中のDataフォルダーに入れるとする。この場合、それぞれのファイルのパスはDay03/Script.R、Day03/Figs/FigureA.png、Day03/Data/Day03_Data.csvとなる（作業フォルダーが~/であるため、~/は省略可能）。全ての作業が同じフォルダー（とその下位フォルダー）内で行うとしたら、パス名にDay03も不要な気がする。そこで必要なのがRStudioのプロジェクト機能である。\n　RStudioでDay03というプロジェクトを作成すると、Day03フォルダーが自動的に生成され、Day03.Rprojというファイルも生成される。プロジェクトを最上位フォルダーに作成したのであれば、~/Day03/Day03.Rprojファイルが生成されるのである。ここでRStudioのFile > Open ProjectでこのDay03.Rprojファイルを開くとRStudio画面の右上にプロジェクト名が表示され、作業フォルダーがDay03.Rprojが保存されているフォルダー、つまり~/Day03へ変更される（プロジェクトが開かれていな場合は「Project: (None)」と表示される）。実際、NIIオンライン分析システムでXXXという名前のプロジェクトを生成し、そのプロジェクトを開けば作業フォルダーは/home/joyvan/XXX/（=~/XXX/）になる（getwd()で確認可能）。これは大変便利な機能である。なぜなら作業フォルダーまでのパスは全て省略可能だからだ。これまでDay03/Script.R、Day03/Figs/FigureA.png、Day03/Data/Day03_Data.csvだったパスが、それぞれScript.R、Figs/FigureA.png、Data/Day03_Data.csvになる。\n　また、何らかの理由でDay03フォルダーの名前をDay05に変更したとしよう。もし、プロジェクト機能を使っていないのであれば、パスのDay03を全てDay05に変更する必要がある。しかし、プロジェクト機能を使っているのであれば、.Rprojファイルが存在するフォルダーが作業フォルダーになるため、そもそもパスにDay03は存在しない。つまり、修正不要ということだ。ちなみに、プロジェクトを一旦作成したら、そのプロジェクトのフォルダー名や.Rprojファイルの名前は自由に修正しても良いし、フォルダー名と.Rprojファイルの名前が一致しなくても良い。\n　以上の内容をまた住所と郵便の話で例えるとしよう。社内でも郵便物の行き来は頻繁に行われる。とりわけ面積が広く、キャンパスも複数ある大学なら尚更だ。たとえば、「兵庫県神戸市灘区六甲台町2-1 神戸大学 ラーメン研究科」の宋が「兵庫県神戸市灘区六甲台町2-1 神戸大学 さつまいも研究科」の重村に郵便を送る場合、同じ大学であるにも関わらず、住所を全て書くのは面倒なことであろう。ここで神戸大学専用の郵便局を作れば問題は解決される（「学内便」と呼ばれる）。そうすれば差出人は「ラーメン研究科　宋」、受取人は「さつまいも研究科　重村」と書くだけで郵便物は届く。つまり、「兵庫県神戸市灘区六甲台町2-1 神戸大学」は省略できる（同じ市区町村内の引っ越した際、転入・転出届けの住所欄に市区町村名までは省略できるのと同じ）。また、神戸大学がなぜかキャンパスを北海道に移転した場合を考えてみよう。学内便がなければ、郵便物の住所を全て「北海道〜」に変えなければならない。しかし、学内便が存在すればこれまで使ってきた「ラーメン研究科　宋」という表記は有効であろう。\n　このようにRStudioのプロジェクト機能は必須といっても過言ではない。簡単な計算目的として使う場合は問題ないが、何かの分析をする時、授業の実習時、課題時には必ずRStudioの右上が「Project: (None)」になっていないことを確認しよう。\n\n\n\n\n\n\n絶対パスと相対パス\n\n\n\n　これまで紹介したパスの書き方で/（WindowsならC:\\）から始まるパスは、絶対パス（absolute path）またはフルパス（full path）と呼ばれる。これはファイル名を最上位フォルダーを起点に書く方法である。一方、/（WindowsならC:\\）で始まらないパスは相対パス（relative path）呼ばれ、ファイル名を作業フォルダーを起点に書く方法である。"
  },
  {
    "objectID": "intro/filesystem.html#本講義でおすすめするフォルダー構造",
    "href": "intro/filesystem.html#本講義でおすすめするフォルダー構造",
    "title": "本講義のためのファイル管理術",
    "section": "4 本講義でおすすめするフォルダー構造",
    "text": "4 本講義でおすすめするフォルダー構造\n　プロジェクトを作成すれば、プロジェクトフォルダー内に以下のようなフォルダーを作成しよう。\n\n表形式のデータを読み込んだり、保存したりするのであればDataフォルダーをプロジェクトフォルダー内に作成する。\n\n.csv、.xlsx、.sav、.dtaのような表形式ファイルはDataフォルダーに入れる。\nデータを加工し、保存する場合はData/ファイル名.csvなどと指定する。\n\n図を作成し、保存する予定があれば、Figsフォルダーをプロジェクトフォルダー内に作成する。\n\n図を保存する場合、ファイルのパスをFigs/ファイル名.pngやFigs/ファイル名.pdfとする。\n\n\n　よく分からない場合はとりあえずプロジェクトフォルダー内にDataとFigsというフォルダーを作っておこう。ただし、.R、.Rmdなどコードファイルはプロジェクトフォルダーの下位フォルダーに入れず、プロジェクトフォルダーの直に入れよう4。この場合、R Markdown / Quartoで作成された文書（.html、.pdfなど）は.Rmdや.qmdファイルと同じフォルダーに保存される（別途の設定をすれば別フォルダーに保存することも可能だが、そこまではしなくても良い）。"
  },
  {
    "objectID": "intro/filesystem.html#参考",
    "href": "intro/filesystem.html#参考",
    "title": "本講義のためのファイル管理術",
    "section": "5 参考",
    "text": "5 参考\n　以下の内容も合わせて読むことを強く推奨する。\n\n宋財泫・矢内勇生.『私たちのR』の第6.1章: コンピュータの基礎知識"
  },
  {
    "objectID": "intro/file.html",
    "href": "intro/file.html",
    "title": "ファイル管理",
    "section": "",
    "text": "フォルダー/ファイルの管理はJupyterHub内でも、RStudio内でもできるが、ここではRStudio側で管理する方法を紹介する。RStudioを起動し、作業するプロジェクトを開き、Filesペインを確認しよう。RStudioを経由したフォルダー/ファイルの管理は全てFilesペイン上で行われる。"
  },
  {
    "objectID": "intro/file.html#フォルダーの管理",
    "href": "intro/file.html#フォルダーの管理",
    "title": "ファイル管理",
    "section": "1 フォルダーの管理",
    "text": "1 フォルダーの管理\n　講義、または課題ごとのプロジェクトを作ったら、JupyterHubにプロジェクトのフォルダーが生成される。各プロジェクトごとにRスクリプト、Markdownファイル、出力物（図、文書など）が管理できるが、プロジェクト内のファイルが多くなる可能性もある。この場合、プロジェクト・フォルダー内に更に下位フォルダーを作成し、ファイルを管理した方が望ましい。\n\n1.1 フォルダーの作成\n手順1: 現在、Filesペインで表示されているフォルダーがプロジェクトの最上位フォルダーであることを確認する。「Home > プロジェクト名」と表示されていれば問題ない。\n\n\n\n\n\n\n\n\n\n手順2: New Folderをクリックする。\n\n\n\n\n\n\n\n\n\n手順3: 作成するフォルダーの名前を入力する。ここではデータなどを集めておくDataという名のフォルダーを作成する。\n\n\n\n\n\n\n\n\n\n手順4: 正しくフォルダーが作成されているかを確認する。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nフォルダー名の付け方\n\n\n\nフォルダー名にはローマ字、数字のみを使おう。スペースもなるべく使わず、空白を入れたい場合はスペースの代わりにアンダースコア（_）を使おう。\n\n\n\n\n\n\n\n\nフォルダー in フォルダー\n\n\n\nフォルダー内に更にフォルダーを作成することもできる。一つのフォルダー内にファイルが多すぎる場合、更にフォルダー分けして管理した方が効率的だろう。\n\n\n\n\n1.2 フォルダーの削除\n\n\n\n\n\n\nフォルダーの削除は慎重に!\n\n\n\nフォルダーを削除するとフォルダー内のファイルも全て削除される。削除する前には慎重にフォルダー内のファイルを確認しておくこと。\n\n\n手順1: 削除するフォルダーの左にチェックを付け、Deleteをクリックする。\n\n\n\n\n\n\n\n\n\n手順2: Yesをクリックする。"
  },
  {
    "objectID": "intro/file.html#ファイルの管理",
    "href": "intro/file.html#ファイルの管理",
    "title": "ファイル管理",
    "section": "2 ファイルの管理",
    "text": "2 ファイルの管理\n　分析に使用するデータセットを自分のPCにダウンロードしてもそのままNIIオンライン分析システムで使うことはできない。NIIオンライン分析システムで使用するためには、ファイルをアップロードする必要がある。これはデータだけでなく、本講義の課題用ファイルについても同様である。\n\n2.1 ファイルのアップロード\n手順1: ファイルをアップロードしたいフォルダーへ移動する。\n\n下位フォルダーへの移動: フォルダー名をクリックする。\n上位フォルダーへの移動: 「..」をクリックするか、パスが表示されているバーで移動先をクリックする。\n\n手順2: ファイルのアップロード先が正しいかを確認し、Uploadをクリックする。\n\n以下の例はHomework_01プロジェクト・フォルダー内のDataフォルダーがアップロード先である。\n\n\n\n\n\n\n\n\n\n\n手順3: File to upload:でアップロードしたいファイルを選択する。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n複数のファイルをアップロードしたい場合\n\n\n\nRStudio上でファイルは一度の一つしかアップロードできない。複数のファイルを同時にアップロードしたい場合は、この作業を繰り返すか、JupyterHubのホーム画面でアップロードする必要がある。\n\n\n手順4: アップロードするファイルをダブルクリックする。\n\n以下ではPrev_Vote.csvというファイルをアップロードする例である。\n\n\n\n\n\n\n\n\n\n\n手順5: OKをクリックする。\n\n\n\n\n\n\n\n\n\n手順6: 正しくファイルがアップロードされているかを確認する。\n\n\n\n\n\n\n\n\n\n\n\n2.2 ファイルのダウンロード\n　作成した図表をLaTex/Microsoft Word/Powerpoint/Pages/Keynoteなどで使うためには、その図表を自分のPCにダウンロードする必要がある。同様に、課題の出力物をLMSに提出するためにも、出力物を一旦自分のPCにダウンロードしてから提出する必要がある。\n\n\n\n\n\n\n複数ファイルのダウンロード\n\n\n\nアップロードは一度ごとに一つのファイルしかアップロードできないが、ダウンロードは複数のファイルを同時にダウンロードできる。ただし、個別のファイルがダウンロードされるのではなく、一つのファイルととして圧縮（zip形式）されてからダウンロードされる。ダウンロード後はファイルを解凍すること。\n\n\n手順1: ダウンロードするファイル名の左にチェックを付ける。\n\n以下ではMicro_HW01.htmlというファイルをダウンロードする例である。\n\n\n\n\n\n\n\n\n\n\n手順2: More > Export…をクリックする。\n\n\n\n\n\n\n\n\n\n手順3: Downloadをクリックする。"
  },
  {
    "objectID": "intro/install.html",
    "href": "intro/install.html",
    "title": "Rの導入",
    "section": "",
    "text": "本講義の実習はNIIオンライン分析システムの使用を推奨する。自分のPCにインストールしたR + RStudio、RStuio.cloud、大学PCにインストールされているR + RStudioなどの使用を妨げないが、本ページの資料と同じ結果が得られることは保証しない。また、実習・分析中に起きた不具合についても授業中には対応しない。\n　以下ではNIIオンライン分析システムを用いたRおよびRStudioの導入方法について解説する。\n\n\n\n\n\n\n注意!!!\n\n\n\n初期設定は国立情報学研究所（以下、NII）のサーバーに自分の作業用スペースを借りる作業である。つまり、初期設定を繰り返すことはNIIのサーバー（のスペース）をいくつも借りることとなり、サーバーを圧迫してしまう可能性がある。したがって、初期設定は授業全体を通じて1回のみ実行すること。\n\n\n手順1: OpenIdPアカウントを登録する。\n\n以下のページの手順1〜9を参照すること。\n\nhttps://meatwiki.nii.ac.jp/confluence/pages/viewpage.action?pageId=67620540\n\n登録するメールアドレスは必ずac.jp、go.jpで終わる大学アドレスを使うこと。\n\n手順2: 以下のアドレスにアクセスする。\n\nhttps://binder.cs.rcos.nii.ac.jp/v2/gh/JaehyunSong/Binder_R/HEAD\n\n手順2: 所属機関に「OpenIdP」を入力・選択し、「選択」をクリックする。\n\n\n\n\n\n\n\n\n\n手順3: OpenIdPのアカウント名とパスワードを入力する。\n\nなにか同意を求める画面が表示される場合、そのまま「同意します」をクリックする。\n\n\n\n\n\n\n\n\n\n\n手順4: 以下のような画面が表示されたらしばらく待つ。\n\n\n\n\n\n\n\n\n\n手順5: 以下のような画面が表示されたら初期設定は完了\n\n\n\n\n\n\n\n\n\n手順6: 初期設定が終わったら、すぐRおよびRStudioが利用可能だが、ここでは一旦右上の「Logout」をクリックし、タブ (or ウィンドウ) を閉じる。"
  },
  {
    "objectID": "intro/install.html#niiオンライン分析システムの起動",
    "href": "intro/install.html#niiオンライン分析システムの起動",
    "title": "Rの導入",
    "section": "2 NIIオンライン分析システムの起動",
    "text": "2 NIIオンライン分析システムの起動\n初期設定が終わったら、今後、以下の手順でNIIオンライン分析システムを起動する。\n手順1: 以下のアドレスにアクセスするか、本ページの右上にある右上の  ボタンをクリックする（右クリックし、新しいタブ or ウィンドウで開くことを推奨する）。\n\nhttps://jupyter.cs.rcos.nii.ac.jp/\n\n手順2: 必要に応じて認証を行う（初期設定の手順2, 3, 4と同じ）。\n手順3: サーバーリストが表示される。URL列のアドレスをクリックする。\n\n参考) 初期設定を1回のみ行ったら1行のみ表示されるため混同することはないが、個人利用などを目的に初期設定を複数回行った場合は2行以上が表示されるだろう。本講義に使うサーバーのURLをクリックすること。\n\n\n\n\n\n\n\n\n\n\n手順4: 以下のような画面が表示されたらNIIオンライン分析システムの起動完了である。この画面を今後、「JupyterHub（ジュピターハブ）のホーム画面」と呼ぶ。"
  },
  {
    "objectID": "intro/install.html#rstudioの起動",
    "href": "intro/install.html#rstudioの起動",
    "title": "Rの導入",
    "section": "3 RStudioの起動",
    "text": "3 RStudioの起動\n手順1: JupyterHubのホーム画面の右上の「New」をクリックし、「RStudio」をクリックする。\n\n\n\n\n\n\n\n\n\n手順2: 以下の画面が表示されたら、RStudioの起動完了である（RStudioの見栄は初期状態の場合、白ベースである）。"
  },
  {
    "objectID": "intro/install.html#rstudioの終了",
    "href": "intro/install.html#rstudioの終了",
    "title": "Rの導入",
    "section": "4 RStudioの終了",
    "text": "4 RStudioの終了\n手順1: RStudio画面右上のオレンジ色のボタンをクリックする。\n\n\n\n\n\n\n\n\n\n手順2: 以下のダイアログが表示されたらタブ、またはウィンドウを閉じる。"
  },
  {
    "objectID": "intro/packages.html",
    "href": "intro/packages.html",
    "title": "パッケージ",
    "section": "",
    "text": "Rには数万以上のパッケージが存在し、Rをインストールするだけでも数十のパッケージが自動的にインストールされる。しかし、データ分析/ハンドリング/可視化の手法は日々発展しており、R内蔵パッケージだけでは対応が難しい (できないわけではない)。したがって、必要に応じて新しいパッケージを導入する必要があるが、パッケージのインストールするにはConsoleペインに以下のように入力する。\ninstall.packages(\"インストールするパッケージ名\")\n　前期の「ミクロ政治データ分析実習」では{tidyverse}パッケージのみ使用する予定である。ただし、本講義ようにセッティングされた環境を導入する場合、{tidyverse}は既に導入済みであるため、以下のコードは実行しなくても良い。"
  },
  {
    "objectID": "intro/packages.html#アップデート",
    "href": "intro/packages.html#アップデート",
    "title": "パッケージ",
    "section": "2 アップデート",
    "text": "2 アップデート\n　特定のパッケージをアップデートする方法はインストールと同じだが、一つ一つのパッケージが全て最新バージョンかどうかを確認するのは大変である。また、久々のアップデートで数十個のパッケージをアップデートする必要があるケースもあろう。この場合、RStudioの内蔵機能を使えば一瞬で更新可能なパッケージのリスト化、インストールができる。\n手順1: PackagesペインのUpdateをクリックする。\n\n\n\n\n\n\n\n\n\n手順2: アップデートしたいパッケージの左にチェックを付けるか、左下のSelect Allをクリックし、右下のInstall Updatesをクリックする。\n\n\n\n\n\n\n\n\n\n　インストール、またはアップデートの際、以下のようなメッセージが出力される場合がある。\n  There are binary versions available but the source versions\n  are later:\n      binary source needs_compilation\nterra 1.5-17 1.5-21              TRUE\nyaml   2.2.2  2.3.4              TRUE\n\nDo you want to install from sources the packages which need compilation? (Yes/no/cancel)\n　この場合、Consoleペイン上でYes、no、cancelのいずれかを入力してReturnキー (Enterキー)を押す必要がある。大文字と小文字は区別すること。どうしても最新のパッケージが欲しい場合はYesを入力すれば良いが、インストールに時間がかかる場合がある。一方、noを入力した場合は、若干古いバージョンがインストールされるが、インストールに必要な時間が短いため、基本的にはnoでも問題ないだろう。cancelを入力した場合はアップデートが全てキャンセルされる。"
  },
  {
    "objectID": "intro/packages.html#教科書",
    "href": "intro/packages.html#教科書",
    "title": "パッケージ",
    "section": "3 教科書",
    "text": "3 教科書\n『私たちのR』の第5章「Rパッケージ」: https://www.jaysong.net/RBook/packages.html"
  },
  {
    "objectID": "intro/project.html",
    "href": "intro/project.html",
    "title": "プロジェクト管理",
    "section": "",
    "text": "手順1: File > New Project…をクリックする。\n\n\n\n\n\n\n\n\n\n手順2: New Directoryをクリックする。\n\n\n\n\n\n\n\n\n\n手順3: New Projectをクリックする。\n\n\n\n\n\n\n\n\n\n手順4: Directory name:にプロジェクト名を入力し、Create Projectをクリックする。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n注意: プロジェクト名の付け方\n\n\n\n　プロジェクト名にはローマ字、数字のみを使おう。つまり、日本語、中国語、韓国語、全角文字、スペースはなるべく使わないこと。空白を入れたい場合はスペースの代わりにアンダースコア（_）を使おう。"
  },
  {
    "objectID": "intro/project.html#プロジェクトの開き方",
    "href": "intro/project.html#プロジェクトの開き方",
    "title": "プロジェクト管理",
    "section": "2 プロジェクトの開き方",
    "text": "2 プロジェクトの開き方\n　プロジェクトを作成すれば、自動的に出来たてのプロジェクトが開かれる。しかし、NIIオンライン分析システムから一旦ログアウトし、改めてRStudioを起動する場合、プロジェクトをロードする必要がある。\n手順1: File > Open Project…をクリックする。\n\n\n\n\n\n\n\n\n\n手順2: プロジェクト・フォルダー名をダブルクリックする。\n\n\n\n\n\n\n\n\n\n手順3: .Rprojで終わるファイルをダブルクリックする。\n\n\n\n\n\n\n\n\n\nプロジェクトが正しくロードされている場合、RStudioの右上にプロジェクト名が表示される。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n常にプロジェクト機能を使おう!\n\n\n\n　RStudionの右上のプロジェクト名表示が「Project: (None)」になっていることは、現在プロジェクトを開いていないことを意味する。簡単な計算機として使う目的以外（つまり、授業中の実習や課題）は必ずプロジェクト機能を使おう。"
  },
  {
    "objectID": "intro/rstudio.html",
    "href": "intro/rstudio.html",
    "title": "RStudioの設定",
    "section": "",
    "text": "RStudioはそのままでも使えるが、少しカスタマイズするとより使い勝手が良くなる。RStudioのカスタマイズ画面はTools > Global Optionsをクリックすることで表示される。\n以下の設定はNIIオンライン分析システムで使用可能なRStudio最新版 (RStudio Server 2021.09.1+372)の設定であり、宋の設定と同じである。"
  },
  {
    "objectID": "intro/rstudio.html#general",
    "href": "intro/rstudio.html#general",
    "title": "RStudioの設定",
    "section": "1 General",
    "text": "1 General\n\n\n\n\n\n\nRestore .RData into workspace at startupのチェックを消す。\nSave workspace to .RData on exit:をNeverに変更する。\nAlways save history (even when not saving .RData)のチェックを消す。"
  },
  {
    "objectID": "intro/rstudio.html#code",
    "href": "intro/rstudio.html#code",
    "title": "RStudioの設定",
    "section": "2 Code",
    "text": "2 Code\n\n2.1 Editingタブ\n\n\n\n\n\n\nInsert spaces for tabのチェックを付ける。\nTab widthは2、または4を指定する。\nAuto-detect code indentationのチェックを付ける。\nInsert matching parens/quotesのチェックを付ける。\nAuto-indent code after pasteのチェックを付ける。\nVertically align arguments in auto-indentのチェックを付ける。\nAlways save R scripts before sourcingのチェックを付ける。\nCtrl + Return executes:をMulti-line R statementに変更する。\n\n\n\n2.2 Displayタブ\n\n\n\n\n\n\nHighlight selected wordのチェックを付ける。\nHighlight selected lineのチェックを付ける。\nShow line numbersのチェックを付ける。\nShow syntax highlighting in console inputのチェックを付ける。\nHighlight R function callsのチェックを付ける。\nRainbow parenthesesのチェックを付ける。\n\n\n\n2.3 Savingタブ\n\n\n\n\n\n\nDefault text encoding:のChangeをクリックし、UTF-8を選択する。\n\n\n\n2.4 Completionタブ\n\n\n\n\n\n\nShow code completion:をAutomaticallyに変更する。\nAllow automatic completions in consoleのチェックを付ける。\nInsert parentheses after function completionsのチェックを付ける。\nShow help tooltip after function completionsのチェックを付ける。\nInsert spaces around equals for argument completionsのチェックを付ける。\nUse tab for autocompletionのチェックを付ける。"
  },
  {
    "objectID": "intro/rstudio.html#console",
    "href": "intro/rstudio.html#console",
    "title": "RStudioの設定",
    "section": "3 Console",
    "text": "3 Console\n\n\n\n\n\n\nShow syntax highlighting in console inputのチェックを付ける。"
  },
  {
    "objectID": "intro/rstudio.html#appearance",
    "href": "intro/rstudio.html#appearance",
    "title": "RStudioの設定",
    "section": "4 Appearance",
    "text": "4 Appearance\n\n\n\n\n\n\n自分の好みのものを選択する。ただし、小さすぎる文字サイズ (font size) は推奨しない。目に優しくないだけでなく、誤字脱字が見つけにくくなる。"
  },
  {
    "objectID": "intro/rstudio.html#pane-layout",
    "href": "intro/rstudio.html#pane-layout",
    "title": "RStudioの設定",
    "section": "5 Pane Layout",
    "text": "5 Pane Layout\n\n\n\n\n\n\n左上: Source\n右上: Console\n左下: 全てチェックを消す。\n左下: 全てチェックを付ける。"
  },
  {
    "objectID": "intro/rstudio.html#r-markdown",
    "href": "intro/rstudio.html#r-markdown",
    "title": "RStudioの設定",
    "section": "6 R Markdown",
    "text": "6 R Markdown\n\n\n\n\n\n\nShow output preview in:をViewer Paneに変更する。\nShow output inline for all R Markdown documentsのチェックを消す。\n\n設定が終わったら右下のOK、またはApplyをクリックする。"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Causal Inference@Kobe",
    "section": "",
    "text": "アイコン説明\n\n\n\n\n：NIIオンライン分析システムの起動\n\n右クリックし、新しいタブ（or ウィンドウ）で開いてください。\n初期設定が必要です。初期設定の方法はRの使い方 > Rの導入を参照してください。\n\n：Rの教科書（『私たちのR』）\n：本ウェブサイト内の検索\n\n\n\n\n\n\n\n\n\nページ情報\n\n\n\n\n最終更新日: 2022年07月26日\n開発環境\n\nmacOS 12.4 “Monterey”\nFirefox 102.0.0\nR version 4.2.1 (2022-06-23)\nRStudio 2022.02.3+492 “Prairie Trillium”\nQuarto 1.0.36\nR package {quarto} 1.2\n\n本サポートページのレポジトリ"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "本講義について",
    "section": "",
    "text": "科目名: 計量政治学方法論 I (実証分析と方法)\n講師: 宋財泫 (ソン ジェヒョン)\n所属: 関西大学総合情報学部\n\nE-mail: song [at] kansai-u.ac.jp\nHomepage: https://www.jaysong.net\n\n時間: 2021年9月1,2,3,13,14日2∼4限目\n教室: フロンティア館 304 教室"
  },
  {
    "objectID": "syllabus.html#授業の内容",
    "href": "syllabus.html#授業の内容",
    "title": "本講義について",
    "section": "授業の内容",
    "text": "授業の内容\n　本講義は、近年政治学において関心が高まっている「因果推論」を行うための諸手段を 理解・習得することを目的とする。最初に、最良の因果推論とも称される RCT(ランダム 化比較試験)を説明し、RCT が不可能な際の手法としてマッチング、回帰不連続デザイ ン、差分の差などを紹介する。"
  },
  {
    "objectID": "syllabus.html#評価",
    "href": "syllabus.html#評価",
    "title": "本講義について",
    "section": "評価",
    "text": "評価\n\n授業貢献度 30%\n\n授業への参加度、質問など\n\n期末レポート 70%\n\n期末レポートの内容は初回の授業で紹介する"
  },
  {
    "objectID": "syllabus.html#履修上の注意",
    "href": "syllabus.html#履修上の注意",
    "title": "本講義について",
    "section": "履修上の注意",
    "text": "履修上の注意\n　統計学に関する基礎知識が必要である。目安は母平均の差の検定、および線形回帰分析が理解でき、統計ソフトウェアで実行・解釈が可能なレベルである。\n　本講義における共通言語はRである。Rの使い方に関しては既にインターネット上に膨大な情報がある。宋と矢内勇生(高知工科大学)が執筆中の以下の資料(無料で閲覧可能)を参照することも1つの選択肢である。\n\n宋財泫・矢内勇生. 『私たちの R: ベストプラクティスの探究』(web-book)\n\nRの導入方法は講義中、宋が解説する。\n\n\n　統計学および定量的分析、Rの使い方については以下の書籍を講義開始日までに読んで おくことを強く推奨する。\n\n浅野正彦・矢内勇生. 2019『Rによる計量政治学』オーム社.\n\n　R スクリプト作成の際、{tidyverse} というパッケージ群を積極的に活用する。この パッケージには {dplyr}、{ggplot2} などのパッケージが含まれている。各パッケージの 使い方を習得するには以下の教材を推奨する。\n\nWickham, Hadley and Grolemund, Garrett. 2017. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, O’Reilly. (邦訳あり/原著はインターネットから無料で閲覧可)\n松村優哉・湯谷啓明・紀ノ定保礼・前田和寛 . 2021. 『改訂2版 Rユーザのための RStudio[実践] 入門—tidyverseによるモダンな分析フローの世界—』技術評論社."
  },
  {
    "objectID": "syllabus.html#教科書参考書",
    "href": "syllabus.html#教科書参考書",
    "title": "本講義について",
    "section": "教科書・参考書",
    "text": "教科書・参考書\n以下は本書の内容を(一部)カバーする書籍の目録である。必ずしも購入する必要はないが、予習・復習において適宜参照することを推奨する。\n\n因果推論の理論と実例\n\n【AP 2008】 Angrist, Joahua D., and Jorn-steffen Pischke. 2008. Mostly Harmless Econometrics: An Empiricist’s Companion. Princeton University Press.\n\n『「ほとんど無害」な計量経済学―応用経済学のための実証分析ガイド』 (翻訳はかなり有害)\n\n【AP 2014】 Angrist, Joahua D., and Jorn-steffen Pischke. 2014. Mastering ’Metrics: The Path from Cause to Effect. Princeton University Press.\n【森田 2014】 森田果. 2014.『実証分析入門—データから「因果関係」を読み解く作法』日本評論社.\n【中室・津川 2017】 中室牧子・津川友介. 2017.『「原因と結果」の経済学—データから真実を見抜く思考法』ダイヤモンド社.\n【伊藤 2017】 伊藤公一郎. 2017.『データ分析の力—因果関係に迫る思考法』光文社新書.\n【松林 2021】 松林哲也. 2021.『政治学と因果推論』岩波書店.\n\n理論+R\n\n【星野・田中 2016】 星野匡郎・田中久稔. 2016.『Rによる実証分析—回帰分析から因果分析へ—』オーム社.\n【安井 2020】 安井翔太. 2020. 『効果検証入門—正しい比較のための因果推論/計量経済学の基礎』技術評論社.\n【Cunningham 2021】 Cunningham, Scott. 2021. Causal Inference: The Mixtape. Yale University Press.\n【高橋 2022】 高橋将宜. 2022. 『統計的因果推論の理論と実装』共立出版.\n\n\n\n本講義との関係\n\n\n\n\nIntro/RCT\nMatching\nDiff-in-Diff\nRDD\nIV\n\n\n\n\nAP 2008\nCh.2\nCh.3\nCh.5\nCh.6\nCh.4\n\n\nAP 2014\nCh.1-2\n\nCh.5\nCh.4\nCh.3\n\n\n森田 2014\n第16章\n\n第18章\n第22章\n第20章\n\n\n星野・田中 2016\n第1-8章\n第9章\n\n第10章\n第11章\n\n\n中室・津川 2017\n第1-3章\n第7-8章\n第4章\n第6章\n第5章\n\n\n伊藤 2017\n第1-2章\n\n第5章\n第3章\n\n\n\n安井 2020\n第1章\n第2-3章\n第4章\n第5章\n\n\n\nCunningham 2021\nCh.2-4\nCh.5\nCh.8-10\nCh.6\nCh.7\n\n\n松林 2021\n第1-5章\n\n第8章\n第6章\n第7章\n\n\n高橋 2022\n第1-3章\n第4-12章\n\n第15-18章\n第13-14章"
  },
  {
    "objectID": "syllabus.html#講義内容参考文献",
    "href": "syllabus.html#講義内容参考文献",
    "title": "本講義について",
    "section": "講義内容・参考文献",
    "text": "講義内容・参考文献\n\n1日目：因果推論の考え方\n\nTextbook\n\nImbens, Guido W., and Donald B. Rubin. 2015. Causal Inference for Statistics, Social, and Biomedical Sciences. Cambridge University Press. (Ch. 1 and 2)\nHernan, Miguel A., James M. Robins. 2020. Causal Inference. Chapman & Hall/CRC. (Ch. 1)\n\nArticle\n\nHolland, Paul W. 1986. “Statistics and Causal Inference.” Journal of the American Statistical Association, 81: 945–960.\nMarini, Margaret Mooney, and Burton Singer. 1988. “Causality in the Social Sciences.” Sociological Methodology, 18: 347–409.\n\nRubin, Donald B. 2005. “Causal Inference Using Potential Outcomes: Design, Modeling, Decisions.” Journal of the American Statistical Association, 100: 322–331.\n\nBrady, Henry E. 2008. “Causation and Explanation in Social Science.” In Janet M. BoxSteffensmeier, Henry E. Brady, and David Collier, eds. The Oxford Handbook of Political Methodology. Oxford University Press. (Ch. 10)\nKeele, Luke. 2015. “The Statistics of Causal Inference: A View from Political Methodology.” Political Analysis, 23: 313–335.\n\nMonograph\n\n岩波データサイエンス刊行委員会. 2016.『岩波データサイエンス Vol.3』岩波書店.\n\n\n\n\nランダム化比較試験とLab Session\n履修者全員がRの操作に慣れていると判断した場合、Lab Sessionは省略し、最終日に操作変数法の講義を行う。\n\nTextbook (RCT)\n\nImbens, Guido W., and Donald B. Rubin. 2015. Causal Inference for Statistics, Social, and Biomedical Sciences. Cambridge University Press. (Part II)}\nHernan, Miguel A., James M. Robins. 2020. Causal Inference. Chapman & Hall/CRC. (Ch. 2)\n\nTextbook (R Language)\n\n飯田健. 2013.『計量政治学』共立出版\nLander, Jared P.. 2017. R for Everyone: Advanced Analytics and Graphics (2nd Edition). Addison-Wesley Professional.\n\n『みんなのR 第2版』\n\nImai, Kosuke. 2017. Quantitative Social Science: An Introduction. Princeton University Press.\n\n『社会科学のためのデータ分析入門 (上) / (下)』\n\nWickham, Hadley, and Garrett Grolemund. 2017. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. O’Reilly Media.\n\n『Rではじめるデータサイエンス』\n\n高橋康介. 2018.『再現可能性のすゝめ―RStudioによるデータ解析とレポート作成』共立出版\n松村優哉・湯谷啓明・紀ノ定保礼・前田和寛. 2018.『RユーザのためのRStudio[実践]入門―tidyverseによるモダンな分析フローの世界―』技術評論社.\n\nArticle\n\nBertrand, Marianne, and Sendhil Mullainathan. 2004. “Are Emily and Greg More Employable Than Lakisha and Jamal? A Field Experiment on Labor Market Discrimination.” American Economic Review, 94 (4): 991-1013.\nDruckman, James N., Donald P. Green, James H. Kuklinski, and Arthur Lupia. 2006. “The Growth and Development of Experimental Research in Political Science.” American Political Science Review, 100(4): 627-635.\nTomz, Michael. 2007. “Domestic Audience Costs in International Relations: An Experimental Approach.” International Organization, 61 (4): 821-840.\nGerber, Alan S., Donald P. Green, and Christopher W. Larimer. 2008. “Social Pressure and Voter Turnout: Evidence from a Large-Scale Field Experiment.” American Political Science Review, 102 (1): 33-48.\nImai, Kosuke, Gary King, and Elizabeth A. Stuart. 2008. “Misunderstandings between Experimentalists and Observationalists about Causal Inference.” Journal of the Royal Statistical Society. Series A, 171(2): 481-502.\nde Rooji, Eline A., Donald P. Green, and Alan S. Gerber. 2009. “Field Experiments on Political Behavior and Collective Action.” Annual Review of Political Science. 12: 389-395.\nPalfrey, Thomas R. 2009. “Laboratory Experiments in Political Economy.” Annual Review of Political Science, 12: 379-388.}\n\n谷口尚子. 2014. 「政治学における実験研究」『選挙研究』30 (1): 5-15.\n\n\nMonograph\n\n河野勝. 2007. 『社会科学の実験アプローチ』勁草書房.\n肥前洋一. 2016. 『実験政治学』勁草書房.\nBlais, Andre, Jean-Francois Laslier, and Karine Van der Straeten Ed. 2016. Voting Experiments. Springer.\n\nR Packages for Data Analysis\n\n{tidyverse}: Easily Install and Load the ‘Tidyverse’.\n\n{tidyverse}パッケージは{dplyr}、{ggplot2}、{haven}、{magrittr}、{purrr}、{readr}、{stringr}、{tibble}、{tidyr}などを含むパッケージ群である。\n\n\n\n\n\nマッチングとその応用\n\nTextbook\n\nRosenbaum. Paul R. 2002. Observational Studies, 2nd Ed. Springer.\n星野崇宏. 2009.『調査観察データの統計科学―因果推論・選択バイアス・データ融合―』岩波書店（第2・3・4章）\n\nArticle\n\nRosenbaum, Paul R., and Donald B. Rubin. 1983. “The Central Role of the Propensity Score in Observational Studies for Causal Effects.” Biometrika, 70 (1): 41-55.\nAbadie, Alberto and Javier Gardeazabal. 2003. “The Economic Costs of Conflict: A Case Study of the Basque Country.” American Economic Review. 93(1): 113-132.\nMorgan, Stephen L., and David J. Harding. 2006. “Matching Estimators of Causal Effects: Prospects and Pitfalls in Theory and Practice.” Sociological Methods & Research, 35(1): 3-60.\nHo, Daniel E., Kosuke Imai, Gary King, and Elizabeth A. Stuart. 2007. “Matching as Nonparametric Preprocessing for Reducing Model Dependence in Parametric Causal Inference.” Political Analysis, 15: 199-236.\nSekhon, Jasjeet S. 2008. “The Neyman-Rubin Model of Causal Inference and Estimation via Matching Methods.” In Janet M. Box-Steffensmeier, Henry E. Brady, and David Collier, eds. The Oxford Handbook of Political Methodology, New York: Oxford University Press, Ch.11.\nStuart, Elizabeth A., and Donald B. Rubin. 2008. “Best Practice in Quasi-Experimental Designs: Matching Methods for Causal Inference.” In Jason W. Osborne, ed. Best Practices in Quantitative Methods, Thousand Oaks: Sage, Ch.11.\nSekhon, Jasjeet S. 2009. “Opiates for the Matches: Matching Methods for Causal Inference.” Annual Review of Political Science, 12: 487-508.\nAbadie, Alberto,Alexis Diamond, and Jens Hainmueller. 2010. “Synthetic Control Methods for Comparative Case Studies: Estimating the Effect of California’s Tobacco Control Program.” Journal of the American Statistical Association. 105 (490): 493-505.\nStuart, Elizabeth A. 2010. “Matching Methods for Causal Inference: A Review and a Look Forward.” Statistical Science, 25(1): 1-21.\nIacus, Stefano M., Gary King, and Giuseppe Porro. 2012. “Causal Inference without Balance Checking: Coarsened Exact Matching.” Political Analysis, 20: 1-24.\nAbadie, Alberto, Alexis Diamond, and Jens Hainmueller. 2014. “Comparative Politics and the Synthetic Control Method.” American Journal of Political Science. 59 (2): 495-510.\nBrodersen, Kay H., Fabian Gallusser, Jim Koehler, Nicolas Remy, and Steven L. Scott. 2015. “Inferring causal impact using Bayesian structural time-series models.” Annals of Applied Statistics. 9(1): 247-274.\n登藤直弥・小林哲郎・稲増一憲. 2016.「ソフトニュースへの接触は政治的関心を高めるか―一般化傾向スコアを用いた因果推論―」『行動計量学』43 (2): 129-141.\nSamii, Cyrus, Laura Paler, and Sarah Zukerman Daly. 2017. “Retrospective Causal Inference with Machine Learning Ensembles: An Application to Anti-recidivism Policies in Colombia.” Political Analysis, 24 (4): 434-456.\n\nR Package\n\n{Matching}: Multivariate and Propensity Score Matching with Balance Optimization\n{MatchIt}: Nonparametric Preprocessing for Parametric Causal Inference\n{WeightIt}: Weighting for Covariate Balance in Observational Studies\n{SuperLearner}: Super Learner Prediction\n\n\n\n\n差分の差分法\n\nArticle\n\nCard, David, and Alan B. Krueger. 1994. “Minimum Wages and Employment: A Case Study of the Fast Food Industry in New Jersey and Pennsylvania.” American Economic Review, 90 (5): 1397-1420.\nBertrand, Marianne, Esther Duflo, and Sendhil Mullainathan. 2004. “How Much Should We Trust Differences-In-Differences Estimates?” Quarterly Journal of Economics, 119(1): 249-275.\nDi Tella, Rafael, and Ernesto Schargrodsky. 2004. “Do Police Reduce Crime? Estimates Using the Allocation of Police Forces After a Terrorist Attack.” American Economic Review, 94 (1): 115-133.\nAbadie, Alberto. 2005. “Semiparametric Difference-in-Differences Estimators.” Review of Economic Studies, 72(1): 1-19.\nLyall, Jason. 2009. “Does Indiscriminate Violence Incite Insurgent Attacks? Evidence from Chechnya.” Journal of Conflict Resolution, 53(3): 331-362.\nLechner, Michael. 2010. “The Estimation of Causal Effects by Difference-in-Difference Methods.” Working paper.\nAsai, Yukiko, Ryo Kamibayashi, and Shintaro Yamaguchi. 2015. “Childcare availability, household structure, and maternal employment.” Journal of the Japanese and International Economies, 38: 172-192.\nFouirnaies, Alexander, and Hande Mutlu-Eren. 2015. “English Bacon: Copartisan Bias in Intergovernmental Grant Allocation in England.” Journal of Politics, 77(3): 805–817.\nXu, Yiqing. 2017. “Generalized Synthetic Control Method: Causal Inference with Interactive Fixed Effects Models,” Political Analysis, 25(1): 56-76.\n\nR Packages\n\n{estimatr}: Fast Estimators for Design-Based Inference\n{CausalImpact}: Inferring Causal Effects using Bayesian Structural Time-Series Models\n{Synth}: Synthetic Control Group Method for Comparative Case Studies\n{gsynth}: Generalized Synthetic Control Method\n\n\n\n\n回帰不連続デザイン\n\nTextbook\n\nCattaneo, Matias D. 2020. A Practical Introduction to Regression Discontinuity Designs, Cambridge University Press.\n\nArticle\n\nThistlethwaite, Donald L., and Donald T. Campbell. 1960. “Regression-discontinuity analysis: An alternative to the ex post facto experiment.” Journal of Educational Psychology, 51(6): 309-317.\nHahn, Jinyong, Petra Todd, and Wilbert Van der Klaauw. 2001. “Identification and Estimation of Treatment Effects with a Regression-Discontinuity Design.” Econometrica, 69 (1): 201-209.\nPoter, Jack. 2003. “Estimation in the Regression Discontinuity Model.” Working Paper.\nImbens, Guido W., and Thomas Lemieux. 2008. “Regression Discontinuity Designs: A Guide to Practice.” Journal of Econometrics, 142 (2): 615-635.\nLee, David S. 2008. “Randomized experiments from non-random selection in U.S. House elections.” Journal of Econometrics, 142 (2): 675-697.\nJustin McCrary. 2008. “Manipulation of the running variable in the regression discontinuity design: A density test.” Journal of Econometrics, 142 (2): 698-714.\nLee, David S., and Thomas Lemieux. 2010. “Regression Discontinuity Designs in Economics. Journal of Economic Literature, 48 (2): 281-355.\nLee, David S., and Thomas Lemieux. 2010. “Regression Discontinuity Designs in Economics.” Journal of Economic Literature, 48 (2): 281-355.\nImbens, Guido, and Karthik Kalyanaraman. 2011. “Optimal Bandwidth Choice for the Regression Discontinuity Estimator.” Review of Economic Studies, 79 (3): 933-959.\nAriga, Kenichi, Yusaku Horiuchi, Roland Mansilla, and Michio Umeda. 2016. “No sorting, no advantage: Regression discontinuity estimates of incumbency advantage in Japan.” Electoral Studies, 43: 21-31.\nAndrew Gelman and Guido Imbens. 2019. “Why High-Order Polynomials Should Not Be Used in Regression Discontinuity Designs,” Journal of Business & Economic Statistics, 37(3): 447-456.\n\nMonograph\n\nCattaneo, Matias D., Nicolas Idrobo and Rocio Titiunik. 2018. A Practical Introduction to Regression Discontinuity Designs: Volume I. Cambridge University Press.\nCattaneo, Matias D., Nicol'as Idrobo and Roc'io Titiunik. 2018. A Practical Introduction to Regression Discontinuity Designs: Volume II. Cambridge University Press.\n\nR package\n\n{rdd}: Regression Discontinuity Estimation\n{rddtools}: Toolbox for Regression Discontinuity Design (‘RDD’)\n{rddapp}: Regression Discontinuity Design Application\n{rdrobust}: Robust Data-Driven Statistical Inference in Regression-Discontinuity Designs\n{rdmulti}: Analysis of RD Designs with Multiple Cutoffs or Scores\n{rdpower}: Power Calculations for RD Designs\n\n\n\n\n操作変数法\n　以下の内容はLab Sessionを行わない場合のみ、解説する。\n\nArticle\n\nAngrist, Joshua D. and Alan B. Krueger. 2001. “Instrumental Variables and the Search for Identification: From Supply and Demand to Natural Experiments,” Journal of Economic Perspectives, 15 (4): 69-85\nDunning, Thad. 2008. “Model Specification in Instrumental-Variables Regression.” Political Analysis, 16 (3): 290-302.\nKern, Holger Lutz and Jens Hainmueller. 2009. “Opium for the Masses: How Foreign Media Can Stabilize Authoritarian Regimes.” Political Analysis, 17 (4): 377-399.\nAllison J. Sovey and Donald P. Green. 2010. “Instrumental Variables Estimation in Political Science: A Readers’ Guide,” American Journal of Political Science, 55(1): 188-200.\nBollen, Kenneth A. 2012. “Instrumental Variables in Sociology and the Social Sciences,” Annual Review of Sociology, 38:37-72.\nAronow, Peter M. and Allison Carnegie. 2013. “Beyond LATE: Estimation of the Average Treatment Effect with an Instrumental Variable.” Political Analysis, 21 (4): 492-506.\n\nR packages\n\n{AER}: Applied Econometrics with R}\n{ivreg}: Instrumental-Variables Regression by ‘2SLS’, ‘2SM’, or ‘2SMM’, with Diagnostics}"
  },
  {
    "objectID": "material/intro_po_rct.html",
    "href": "material/intro_po_rct.html",
    "title": "第1回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "material/intro_po_rct.html#パッケージ",
    "href": "material/intro_po_rct.html#パッケージ",
    "title": "第1回講義資料",
    "section": "パッケージ",
    "text": "パッケージ\n　通常、Rでのパッケージのインストールとアップーでとにはinstall.packages()関数、読み込みにはlibrary()、またはrequire()関数を使う。また、R公式レポジトリにないパッケージは{devtools}か{remote}パッケージを使う。これらの関数を使い分けることは面倒なので、本講義ではこれらの処理を統合した{pacman}パッケージを使用する。まずは、{pacman}パッケージをインストールする。\n\n# NIIオンライン分析システムを利用する場合、導入ずみ\ninstall.packages(\"pacman\")\n\n　パッケージを読み込む際、pacman::p_load(読み込むパッケージ名)を入力する。インストールされていない場合は、自動的にCRANからダウンロード&インストールした上で読み込んでくれるので便利だ1。以下では本講義で使用するパッケージとして{tidyverse}、{summarytools}、{fastDummies}、{modelsummary}を読み込む。\n\npacman::p_load(tidyverse, summarytools, modelsummary, fastDummies)\n\n　CRANでなく、GitHub上で公開されているパッケージを使う場合はpacman::p_load_gh()を使用する。()の中には\"ユーザー名/リポジトリ名\"を入力。たとえば、{BalanceR}の作成者のGitHubアカウント名はJaehyunSongであり、{BalanceR}のリポジトリ名はBalanceRだから、以下のように入力する。\n\npacman::p_load_gh(\"JaehyunSong/BalanceR\")"
  },
  {
    "objectID": "material/intro_po_rct.html#データの読み込みと確認",
    "href": "material/intro_po_rct.html#データの読み込みと確認",
    "title": "第1回講義資料",
    "section": "データの読み込みと確認",
    "text": "データの読み込みと確認\n　.csv形式のデータを読み込むにはread_csv()関数を使用する。()内には読み込むファイルのパスを\"で囲んで記入する。read_csv()関数はファイルの読み込みのみの機能しか持たない。現在の作業環境内に読み込んだデータを格納するためには代入演算子<-を使う。ここではdataフォルダー内のDay1_Data3.csvを読み込み、raw_dfという名のオブジェクトとしてく格納する。作業環境内のオブジェクトはRを再起動すると削除されるため、改めてパッケージ・データの読み込みが必要だ。\n\nraw_df <- read_csv(\"data/Day1_Data3.csv\")\n\n　オブジェクトの中身を出力するためにはオブジェクト名を入力する。\n\nraw_df\n\n# A tibble: 344,084 × 8\n   treatment  gender   yob hh_size voted2000 voted2002 voted2004 voted2006\n   <chr>      <chr>  <dbl>   <dbl> <chr>     <chr>     <chr>     <chr>    \n 1 Civic Duty male    1941       2 no        yes       no        no       \n 2 Civic Duty female  1947       2 no        yes       no        no       \n 3 Hawthorne  male    1951       3 no        yes       no        yes      \n 4 Hawthorne  female  1950       3 no        yes       no        yes      \n 5 Hawthorne  female  1982       3 no        yes       no        yes      \n 6 Control    male    1981       3 no        no        no        no       \n 7 Control    female  1959       3 no        yes       no        yes      \n 8 Control    male    1956       3 no        yes       no        yes      \n 9 Control    female  1968       2 no        yes       no        no       \n10 Control    male    1967       2 no        yes       no        no       \n# … with 344,074 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　表形式データの大きさ（行の列の数）の確認にはdim()関数を使う。\n\ndim(raw_df)\n\n[1] 344084      8\n\n\n　表形式データの場合、各列には名前が付いており、それぞれが一つの変数に該当する。これら変数名のみの出力にはnames()関数を使う。今回のデータだと、列の数が少ないこともあり、一画面に全列が表示されるが、数百列のデータとなると画面に収まらないので、変数名を確認しておくことを推奨する。\n\nnames(raw_df)\n\n[1] \"treatment\" \"gender\"    \"yob\"       \"hh_size\"   \"voted2000\" \"voted2002\"\n[7] \"voted2004\" \"voted2006\""
  },
  {
    "objectID": "material/intro_po_rct.html#データハンドリングとパイプ演算子",
    "href": "material/intro_po_rct.html#データハンドリングとパイプ演算子",
    "title": "第1回講義資料",
    "section": "データハンドリングとパイプ演算子",
    "text": "データハンドリングとパイプ演算子\n　パイプ演算子には{magrittr}パッケージが提供する%>%とR 4.1から提供されるネイティブパイプ演算子の|>がある。現在の主流は古くから使われた%>%であるが、今後、|>が主流になると考えられるため、以下では|>を使用する。しかし、多くの場合、|>の代わりに%>%を使っても同じ結果が得られる。\n　パイプ演算子はパイプ前のオブジェクトを、パイプ後の関数の第一引数として渡す単純な演算子だ。たとえば、列名を変更する関数はrename()であるが、使い方はrenames(データ名, 新しい列名 = 既存の列名, ...)である。raw_dfのgender列の名前をfemaleに変更する場合は以下のように書く。\n\nrename(raw_df, female = gender)\n\n# A tibble: 344,084 × 8\n   treatment  female   yob hh_size voted2000 voted2002 voted2004 voted2006\n   <chr>      <chr>  <dbl>   <dbl> <chr>     <chr>     <chr>     <chr>    \n 1 Civic Duty male    1941       2 no        yes       no        no       \n 2 Civic Duty female  1947       2 no        yes       no        no       \n 3 Hawthorne  male    1951       3 no        yes       no        yes      \n 4 Hawthorne  female  1950       3 no        yes       no        yes      \n 5 Hawthorne  female  1982       3 no        yes       no        yes      \n 6 Control    male    1981       3 no        no        no        no       \n 7 Control    female  1959       3 no        yes       no        yes      \n 8 Control    male    1956       3 no        yes       no        yes      \n 9 Control    female  1968       2 no        yes       no        no       \n10 Control    male    1967       2 no        yes       no        no       \n# … with 344,074 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　ここで第1引数がraw_dfだが、パイプ演算子を使うと以下のようになり、人間にとって読みやすいコードになる。\n\nraw_df |>\n  rename(female = gender)\n\n# A tibble: 344,084 × 8\n   treatment  female   yob hh_size voted2000 voted2002 voted2004 voted2006\n   <chr>      <chr>  <dbl>   <dbl> <chr>     <chr>     <chr>     <chr>    \n 1 Civic Duty male    1941       2 no        yes       no        no       \n 2 Civic Duty female  1947       2 no        yes       no        no       \n 3 Hawthorne  male    1951       3 no        yes       no        yes      \n 4 Hawthorne  female  1950       3 no        yes       no        yes      \n 5 Hawthorne  female  1982       3 no        yes       no        yes      \n 6 Control    male    1981       3 no        no        no        no       \n 7 Control    female  1959       3 no        yes       no        yes      \n 8 Control    male    1956       3 no        yes       no        yes      \n 9 Control    female  1968       2 no        yes       no        no       \n10 Control    male    1967       2 no        yes       no        no       \n# … with 344,074 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　要するに、X |> Yは「X（の結果）を使ってYを行う」ことを意味する。\n　続いて、変数のリコーディングをしてみよう。xの値が\"A\"なら1、それ以外は0のように、戻り値が2種類の場合のリコーディングにはif_else()を使用する。書き方は以下の通りだ。\n\nif_else(条件式, 条件が満たされる場合の戻り値, 条件が満たされない場合の戻り値)\n\n　たとえば、raw_dfのgender列の値が\"female\"なら1、それ以外なら0とし、その結果をfemale列として追加するコードは以下の通り。同値を意味する演算子が=でなく、==であることに注意すること（=は<-と同じ代入演算子であるが、Rでは代入演算子として=より<-の使用を推奨している）。\n\nmutate(raw_df, \n       female = if_else(gender == \"female\", 1, 0))\n\n# A tibble: 344,084 × 9\n   treatment  gender   yob hh_size voted2000 voted2002 voted2004 voted2…¹ female\n   <chr>      <chr>  <dbl>   <dbl> <chr>     <chr>     <chr>     <chr>     <dbl>\n 1 Civic Duty male    1941       2 no        yes       no        no            0\n 2 Civic Duty female  1947       2 no        yes       no        no            1\n 3 Hawthorne  male    1951       3 no        yes       no        yes           0\n 4 Hawthorne  female  1950       3 no        yes       no        yes           1\n 5 Hawthorne  female  1982       3 no        yes       no        yes           1\n 6 Control    male    1981       3 no        no        no        no            0\n 7 Control    female  1959       3 no        yes       no        yes           1\n 8 Control    male    1956       3 no        yes       no        yes           0\n 9 Control    female  1968       2 no        yes       no        no            1\n10 Control    male    1967       2 no        yes       no        no            0\n# … with 344,074 more rows, and abbreviated variable name ¹​voted2006\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　mutate()は指定された列に対して何らかの処理を行い、その結果を新しい列として追加するか、上書きする関数である。このmutate()関数の第1引数もデータであるため、以下のようにパイプ演算子を使うこともできる。\n\nraw_df |>\n  mutate(female = if_else(gender == \"female\", 1, 0))\n\n# A tibble: 344,084 × 9\n   treatment  gender   yob hh_size voted2000 voted2002 voted2004 voted2…¹ female\n   <chr>      <chr>  <dbl>   <dbl> <chr>     <chr>     <chr>     <chr>     <dbl>\n 1 Civic Duty male    1941       2 no        yes       no        no            0\n 2 Civic Duty female  1947       2 no        yes       no        no            1\n 3 Hawthorne  male    1951       3 no        yes       no        yes           0\n 4 Hawthorne  female  1950       3 no        yes       no        yes           1\n 5 Hawthorne  female  1982       3 no        yes       no        yes           1\n 6 Control    male    1981       3 no        no        no        no            0\n 7 Control    female  1959       3 no        yes       no        yes           1\n 8 Control    male    1956       3 no        yes       no        yes           0\n 9 Control    female  1968       2 no        yes       no        no            1\n10 Control    male    1967       2 no        yes       no        no            0\n# … with 344,074 more rows, and abbreviated variable name ¹​voted2006\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　また、mutate()内には複数のコードを書くのもできる。voted2000列からvoted2006列までそれぞれの値が\"yes\"であれば、1を、それ以外の場合は0にリコーディングしてみよう。\n\nraw_df |>\n  mutate(female    = if_else(gender    == \"female\", 1, 0),\n         voted2000 = if_else(voted2000 == \"yes\", 1, 0),\n         voted2002 = if_else(voted2002 == \"yes\", 1, 0),\n         voted2004 = if_else(voted2004 == \"yes\", 1, 0),\n         voted2006 = if_else(voted2006 == \"yes\", 1, 0))\n\n# A tibble: 344,084 × 9\n   treatment  gender   yob hh_size voted2000 voted2002 voted2004 voted2…¹ female\n   <chr>      <chr>  <dbl>   <dbl>     <dbl>     <dbl>     <dbl>    <dbl>  <dbl>\n 1 Civic Duty male    1941       2         0         1         0        0      0\n 2 Civic Duty female  1947       2         0         1         0        0      1\n 3 Hawthorne  male    1951       3         0         1         0        1      0\n 4 Hawthorne  female  1950       3         0         1         0        1      1\n 5 Hawthorne  female  1982       3         0         1         0        1      1\n 6 Control    male    1981       3         0         0         0        0      0\n 7 Control    female  1959       3         0         1         0        1      1\n 8 Control    male    1956       3         0         1         0        1      0\n 9 Control    female  1968       2         0         1         0        0      1\n10 Control    male    1967       2         0         1         0        0      0\n# … with 344,074 more rows, and abbreviated variable name ¹​voted2006\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　また、パイプ演算子は2つ以上使うこともできる。たとえば、rename()を使ってgender列をfemaleに変更し、mutate()でリコーディングを行う場合、以下のように書く。これはraw_dfを使ってrename()の処理を行い、その結果をmutate()関数のデータとして渡すことを意味する。\n\nraw_df |>\n  rename(female = gender) |>\n  mutate(female    = if_else(female    == \"female\", 1, 0),\n         voted2000 = if_else(voted2000 == \"yes\", 1, 0),\n         voted2002 = if_else(voted2002 == \"yes\", 1, 0),\n         voted2004 = if_else(voted2004 == \"yes\", 1, 0),\n         voted2006 = if_else(voted2006 == \"yes\", 1, 0))\n\n# A tibble: 344,084 × 8\n   treatment  female   yob hh_size voted2000 voted2002 voted2004 voted2006\n   <chr>       <dbl> <dbl>   <dbl>     <dbl>     <dbl>     <dbl>     <dbl>\n 1 Civic Duty      0  1941       2         0         1         0         0\n 2 Civic Duty      1  1947       2         0         1         0         0\n 3 Hawthorne       0  1951       3         0         1         0         1\n 4 Hawthorne       1  1950       3         0         1         0         1\n 5 Hawthorne       1  1982       3         0         1         0         1\n 6 Control         0  1981       3         0         0         0         0\n 7 Control         1  1959       3         0         1         0         1\n 8 Control         0  1956       3         0         1         0         1\n 9 Control         1  1968       2         0         1         0         0\n10 Control         0  1967       2         0         1         0         0\n# … with 344,074 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　以上のコードはデータを加工し、その結果を出力するだけであって、その結果を保存しない。\n\nraw_df\n\n# A tibble: 344,084 × 8\n   treatment  gender   yob hh_size voted2000 voted2002 voted2004 voted2006\n   <chr>      <chr>  <dbl>   <dbl> <chr>     <chr>     <chr>     <chr>    \n 1 Civic Duty male    1941       2 no        yes       no        no       \n 2 Civic Duty female  1947       2 no        yes       no        no       \n 3 Hawthorne  male    1951       3 no        yes       no        yes      \n 4 Hawthorne  female  1950       3 no        yes       no        yes      \n 5 Hawthorne  female  1982       3 no        yes       no        yes      \n 6 Control    male    1981       3 no        no        no        no       \n 7 Control    female  1959       3 no        yes       no        yes      \n 8 Control    male    1956       3 no        yes       no        yes      \n 9 Control    female  1968       2 no        yes       no        no       \n10 Control    male    1967       2 no        yes       no        no       \n# … with 344,074 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　このように頑張ってデータを加工したもののその結果が全く反映されていない。加工したデータを引き続き使っていくためには、加工結果を作業環境内に保存する必要がある。作業環境内にオブジェクトを保存するためには代入演算子（<-）を使い、名前を付けて作業空間内に保存する（ファイルとして保存されるわけではない）必要がある。今回は加工の結果をdfという名で保存する。raw_dfに上書きしても問題はないが、生データはとりあえず作業空間内に残しておくことを推奨する（Rに慣れれば上書きしても良い）。\n\ndf <- raw_df |>\n  rename(female = gender) |>\n  mutate(female    = if_else(female    == \"female\", 1, 0),\n         voted2000 = if_else(voted2000 == \"yes\", 1, 0),\n         voted2002 = if_else(voted2002 == \"yes\", 1, 0),\n         voted2004 = if_else(voted2004 == \"yes\", 1, 0),\n         voted2006 = if_else(voted2006 == \"yes\", 1, 0))\n\ndf\n\n# A tibble: 344,084 × 8\n   treatment  female   yob hh_size voted2000 voted2002 voted2004 voted2006\n   <chr>       <dbl> <dbl>   <dbl>     <dbl>     <dbl>     <dbl>     <dbl>\n 1 Civic Duty      0  1941       2         0         1         0         0\n 2 Civic Duty      1  1947       2         0         1         0         0\n 3 Hawthorne       0  1951       3         0         1         0         1\n 4 Hawthorne       1  1950       3         0         1         0         1\n 5 Hawthorne       1  1982       3         0         1         0         1\n 6 Control         0  1981       3         0         0         0         0\n 7 Control         1  1959       3         0         1         0         1\n 8 Control         0  1956       3         0         1         0         1\n 9 Control         1  1968       2         0         1         0         0\n10 Control         0  1967       2         0         1         0         0\n# … with 344,074 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　ちなみに、across()関数とラムダ式（無名関数）を組み合わせると以上のコードを効率化することもできる。across()は強力な関数だが、初心者にはやや難しいかも知れない。詳細は『私たちのR』の第13.1章を参照されたい。\n\ndf <- raw_df |>\n  rename(female = gender) |>\n  mutate(female = if_else(female == \"female\", 1, 0),\n         across(starts_with(\"voted\"), ~if_else(.x == \"yes\", 1, 0)))"
  },
  {
    "objectID": "material/intro_po_rct.html#記述統計量",
    "href": "material/intro_po_rct.html#記述統計量",
    "title": "第1回講義資料",
    "section": "記述統計量",
    "text": "記述統計量\n　記述統計量の計算には{summarytools}のdescr()関数が便利だ。descr(データ名)を入力するだけで各変数の記述統計量が出力される。実際にやってみると分かるが、情報量がかなり多い。しかし、実際の論文では各変数の歪度や尖度まで報告することはあまりないだろう。ここではstats引数を追加して、論文などでよく使う平均値（\"mean\"）、標準偏差（\"sd\"）、最小値（\"min\"）、最大値（\"max\"）、有効ケース数（\"n.valid\"）のみ出力する。\n\ndf |>\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"))\n\nDescriptive Statistics  \ndf  \nN: 344084  \n\n                   female     hh_size   voted2000   voted2002   voted2004   voted2006         yob\n------------- ----------- ----------- ----------- ----------- ----------- ----------- -----------\n         Mean        0.50        2.18        0.25        0.39        0.40        0.32     1956.21\n      Std.Dev        0.50        0.79        0.43        0.49        0.49        0.46       14.45\n          Min        0.00        1.00        0.00        0.00        0.00        0.00     1900.00\n          Max        1.00        8.00        1.00        1.00        1.00        1.00     1986.00\n      N.Valid   344084.00   344084.00   344084.00   344084.00   344084.00   344084.00   344084.00\n\n\n　ただし、descr()を使うと数値型（numeric）変数の記述統計量のみ表示される。dfだと、treatment列は文字型（character）であるため、表示されない2。各グループがサンプルの何割かを計算するためには、treatment変数をダミー変数へ変換する必要がある。ダミー変数の作成は面倒な作業であるが、{fastDummies}パッケージのdummy_cols()を使えば簡単にできる。dummy_cols()の中にはselect_columns = \"ダミー化する列名\"を入れれば、当該変数をダミー変数へ変換し、新しい列として追加してくれる。それではtreatment列をダミー化&追加し、その結果をdfに上書きしてみよう。\n\ndf <- df |>\n  dummy_cols(select_columns = \"treatment\")\n\ndf\n\n# A tibble: 344,084 × 13\n   treatm…¹ female   yob hh_size voted…² voted…³ voted…⁴ voted…⁵ treat…⁶ treat…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <int>   <int>\n 1 Civic D…      0  1941       2       0       1       0       0       1       0\n 2 Civic D…      1  1947       2       0       1       0       0       1       0\n 3 Hawthor…      0  1951       3       0       1       0       1       0       0\n 4 Hawthor…      1  1950       3       0       1       0       1       0       0\n 5 Hawthor…      1  1982       3       0       1       0       1       0       0\n 6 Control       0  1981       3       0       0       0       0       0       1\n 7 Control       1  1959       3       0       1       0       1       0       1\n 8 Control       0  1956       3       0       1       0       1       0       1\n 9 Control       1  1968       2       0       1       0       0       0       1\n10 Control       0  1967       2       0       1       0       0       0       1\n# … with 344,074 more rows, 3 more variables: treatment_Hawthorne <int>,\n#   treatment_Neighbors <int>, treatment_Self <int>, and abbreviated variable\n#   names ¹​treatment, ²​voted2000, ³​voted2002, ⁴​voted2004, ⁵​voted2006,\n#   ⁶​`treatment_Civic Duty`, ⁷​treatment_Control\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\n\n　画面には表示されないが、出力結果の下段を見るとtreatment_で始まるいくつかの変数が追加されたことが分かる。ここでは\"tretmant\"で始まる列のみを抽出つして確認してみよう。\n\ndf |>\n  select(starts_with(\"treatment\"))\n\n# A tibble: 344,084 × 6\n   treatment  `treatment_Civic Duty` treatment_Control treatme…¹ treat…² treat…³\n   <chr>                       <int>             <int>     <int>   <int>   <int>\n 1 Civic Duty                      1                 0         0       0       0\n 2 Civic Duty                      1                 0         0       0       0\n 3 Hawthorne                       0                 0         1       0       0\n 4 Hawthorne                       0                 0         1       0       0\n 5 Hawthorne                       0                 0         1       0       0\n 6 Control                         0                 1         0       0       0\n 7 Control                         0                 1         0       0       0\n 8 Control                         0                 1         0       0       0\n 9 Control                         0                 1         0       0       0\n10 Control                         0                 1         0       0       0\n# … with 344,074 more rows, and abbreviated variable names\n#   ¹​treatment_Hawthorne, ²​treatment_Neighbors, ³​treatment_Self\n# ℹ Use `print(n = ...)` to see more rows\n\n\n　select()関数内には抽出する列名を入力するだけで良い。たとえば、femaleとyob列を抽出するならselect(female, yob)である。また、femaleからvoted2006までの意味でfemale:voted2006のような書き方もできる。他にも上の例のようにstarts_with()やends_with()、contain()を使って特定の文字列で始まる（で終わる、を含む）列を指定することもできる。一部の列を除外する場合は変数名の前に!か-を付ける。\n　とにかく、問題なくダミー化されていることが分かる。もう一度記述統計量を出してみよう。descr()は仕様上、出力される変数の順番はアルファベット順になるが、ここでは元の順番を維持するためにorder = \"p\"を追加する。また、通常の記述統計表が、先ほど見たものとは違って、各行が変数を、列は記述統計量を表す場合が多い。このように行と列を交換するためにはtranspose = TRUEを追加する3。\n\ndf |>\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        order = \"p\", transpose = TRUE, headings = FALSE)\n\n\n\n\nMean\nStd.Dev\nMin\nMax\nN.Valid\n\n\n\n\nfemale\n0.50\n0.50\n0.00\n1.00\n344084.00\n\n\nyob\n1956.21\n14.45\n1900.00\n1986.00\n344084.00\n\n\nhh_size\n2.18\n0.79\n1.00\n8.00\n344084.00\n\n\nvoted2000\n0.25\n0.43\n0.00\n1.00\n344084.00\n\n\nvoted2002\n0.39\n0.49\n0.00\n1.00\n344084.00\n\n\nvoted2004\n0.40\n0.49\n0.00\n1.00\n344084.00\n\n\nvoted2006\n0.32\n0.46\n0.00\n1.00\n344084.00\n\n\ntreatment_Civic Duty\n0.11\n0.31\n0.00\n1.00\n344084.00\n\n\ntreatment_Control\n0.56\n0.50\n0.00\n1.00\n344084.00\n\n\ntreatment_Hawthorne\n0.11\n0.31\n0.00\n1.00\n344084.00\n\n\ntreatment_Neighbors\n0.11\n0.31\n0.00\n1.00\n344084.00\n\n\ntreatment_Self\n0.11\n0.31\n0.00\n1.00\n344084.00\n\n\n\n\n　他にも以下のようにdfSummary()関数を使えば、綺麗な表としてまとめてくれる。しかも文字型、factor型変数の場合も度数分布表を作成してくれるので非常に便利だ。これも{summarytools}パッケージに含まれた機能なので、別途、パッケージを読み込む必要はない。\n\ndf |>\n  select(-starts_with(\"treatment_\")) |>\n  dfSummary(headings = FALSE) |> \n  print(method = \"render\", round.digits = 3)\n\n\n\n\n  \n    \n      No\n      Variable\n      Stats / Values\n      Freqs (% of Valid)\n      Graph\n      Valid\n      Missing\n    \n  \n  \n    \n      1\n      treatment\n[character]\n      1. Civic Duty2. Control3. Hawthorne4. Neighbors5. Self\n      38218(11.1%)191243(55.6%)38204(11.1%)38201(11.1%)38218(11.1%)\n      \n      344084\n(100.0%)\n      0\n(0.0%)\n    \n    \n      2\n      female\n[numeric]\n      Min  : 0Mean : 0.5Max  : 1\n      0:172289(50.1%)1:171795(49.9%)\n      \n      344084\n(100.0%)\n      0\n(0.0%)\n    \n    \n      3\n      yob\n[numeric]\n      Mean (sd) : 1956.2 (14.4)min ≤ med ≤ max:1900 ≤ 1956 ≤ 1986IQR (CV) : 18 (0)\n      86 distinct values\n      \n      344084\n(100.0%)\n      0\n(0.0%)\n    \n    \n      4\n      hh_size\n[numeric]\n      Mean (sd) : 2.2 (0.8)min ≤ med ≤ max:1 ≤ 2 ≤ 8IQR (CV) : 0 (0.4)\n      1:47834(13.9%)2:214086(62.2%)3:57474(16.7%)4:20916(6.1%)5:3315(1.0%)6:402(0.1%)7:49(0.0%)8:8(0.0%)\n      \n      344084\n(100.0%)\n      0\n(0.0%)\n    \n    \n      5\n      voted2000\n[numeric]\n      Min  : 0Mean : 0.3Max  : 1\n      0:257464(74.8%)1:86620(25.2%)\n      \n      344084\n(100.0%)\n      0\n(0.0%)\n    \n    \n      6\n      voted2002\n[numeric]\n      Min  : 0Mean : 0.4Max  : 1\n      0:209947(61.0%)1:134137(39.0%)\n      \n      344084\n(100.0%)\n      0\n(0.0%)\n    \n    \n      7\n      voted2004\n[numeric]\n      Min  : 0Mean : 0.4Max  : 1\n      0:205934(59.8%)1:138150(40.2%)\n      \n      344084\n(100.0%)\n      0\n(0.0%)\n    \n    \n      8\n      voted2006\n[numeric]\n      Min  : 0Mean : 0.3Max  : 1\n      0:235388(68.4%)1:108696(31.6%)\n      \n      344084\n(100.0%)\n      0\n(0.0%)\n    \n  \n\nGenerated by summarytools 1.0.1 (R version 4.2.1)2022-07-27"
  },
  {
    "objectID": "material/intro_po_rct.html#処置効果の確認",
    "href": "material/intro_po_rct.html#処置効果の確認",
    "title": "第1回講義資料",
    "section": "処置効果の確認",
    "text": "処置効果の確認\n\nグループごとの応答変数の平均値\n　処置効果を確認するためには各グループごとの応答変数（ここではvoted2006）の平均値を計算し、処置群の平均値から統制群の平均値を引く必要がある。まずは、特定の変数の平均値を計算する方法について紹介する。データ内にある特定の変数の平均値を計算するためにはsummarise()関数内に平均値を求めるmean()関数を入れる。たとえば、dfのvoted2006の平均値を計算するコードは以下の通りである。\n\ndf |>\n  summarise(mean(voted2006, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  `mean(voted2006, na.rm = TRUE)`\n                            <dbl>\n1                           0.316\n\n\n　na.rm = TRUEは「欠損値があれば、それを除外する」を意味し、指定されていない場合（=既定値）はFALSEになる。今回は欠損値がないものの、念の為に入れておく。\n　出力結果を見ると、平均値が表示される列の名前が`mean(voted2006, na.rm = TRUE)`となっており、非常に見にくい。この場合、以下のようにmean()の前に出力される列名を予め指定することもできる。\n\ndf |>\n  # voted2006の平均値が表示される列名を Outcome にする。\n  summarise(Outcome = mean(voted2006, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  Outcome\n    <dbl>\n1   0.316\n\n\n　我々が知りたいのはvoted2006の平均値でなく、グループごとの平均値だろう。被験者がどのグループに属しているかわ示す変数はtreatmentであるが、summarise()にデータを渡す前にgroup_by()変数を使うと、グループごとに計算を行い、その結果を返す。\n\ndf |>\n  group_by(treatment) |>\n  summarise(Outcome = mean(voted2006, na.rm = TRUE))\n\n# A tibble: 5 × 2\n  treatment  Outcome\n  <chr>        <dbl>\n1 Civic Duty   0.315\n2 Control      0.297\n3 Hawthorne    0.322\n4 Neighbors    0.378\n5 Self         0.345\n\n\n　group_by()内でも=演算子を使うと、グループ名が出力される列名を変更することができる。\n\ndf |>\n  # グループ名が表示される列名を Group にする。\n  group_by(Groups = treatment) |>\n  summarise(Outcome = mean(voted2006, na.rm = TRUE))\n\n# A tibble: 5 × 2\n  Groups     Outcome\n  <chr>        <dbl>\n1 Civic Duty   0.315\n2 Control      0.297\n3 Hawthorne    0.322\n4 Neighbors    0.378\n5 Self         0.345\n\n\n　ここで一つ注目したいのが、グループの表示順番である。変数のデータ型が文字型だと（Rコンソール上でclass(df$treatment)を入力するか、dfの出力画面でtreatmentの下に<chr>と表示されていることで確認できる）、今のようにアルファベット順で表示される。しかし、統制群は最初か最後に来るのが通例である。この順番をアルファベット順でなく、任意の順番にするためにはtreatment変数をfactor型変数へ変換する必要がある。Factor型は「順序付きの文字型変数」だと理解しても良い4。列の追加・上書き（今回はtreatment列の上書き）の処理が必要なのでmutate()関数を使う。変数をfactor型に変換する関数はfactor()関数で、第1引数としてはfactor型へ変換する変数名を指定する。第2引数はlevelsであり、出力したい順番の文字型ベクトルを指定する。スペルミスに注意すること。\n\ndf |>\n  mutate(treatment = factor(treatment,\n                            levels = c(\"Control\", \"Civic Duty\",\n                                       \"Self\", \"Neighbors\", \"Hawthorne\")))\n\n# A tibble: 344,084 × 13\n   treatm…¹ female   yob hh_size voted…² voted…³ voted…⁴ voted…⁵ treat…⁶ treat…⁷\n   <fct>     <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <int>   <int>\n 1 Civic D…      0  1941       2       0       1       0       0       1       0\n 2 Civic D…      1  1947       2       0       1       0       0       1       0\n 3 Hawthor…      0  1951       3       0       1       0       1       0       0\n 4 Hawthor…      1  1950       3       0       1       0       1       0       0\n 5 Hawthor…      1  1982       3       0       1       0       1       0       0\n 6 Control       0  1981       3       0       0       0       0       0       1\n 7 Control       1  1959       3       0       1       0       1       0       1\n 8 Control       0  1956       3       0       1       0       1       0       1\n 9 Control       1  1968       2       0       1       0       0       0       1\n10 Control       0  1967       2       0       1       0       0       0       1\n# … with 344,074 more rows, 3 more variables: treatment_Hawthorne <int>,\n#   treatment_Neighbors <int>, treatment_Self <int>, and abbreviated variable\n#   names ¹​treatment, ²​voted2000, ³​voted2002, ⁴​voted2004, ⁵​voted2006,\n#   ⁶​`treatment_Civic Duty`, ⁷​treatment_Control\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\n\n　treatment列名の下が<fct>となっていることが分かる。これはtreatment列のデータ型がfactor型であることを意味する。問題なく動くことが確認できたので、dfを上書きしよう。\n\ndf <- df |>\n  mutate(treatment = factor(treatment,\n                            levels = c(\"Control\", \"Civic Duty\",\n                                       \"Self\", \"Neighbors\", \"Hawthorne\")))\n\n　それでは、改めてグループごとのvoted2006の平均値を計算してみよう。今回は計算結果をout_mean_dfという名のオブジェクトとして格納する。\n\nout_mean_df <- df |>\n  group_by(Groups = treatment) |>\n  summarise(Outcome = mean(voted2006, na.rm = TRUE))\n\nout_mean_df\n\n# A tibble: 5 × 2\n  Groups     Outcome\n  <fct>        <dbl>\n1 Control      0.297\n2 Civic Duty   0.315\n3 Self         0.345\n4 Neighbors    0.378\n5 Hawthorne    0.322\n\n\n　今回は統制群は最初に出力されていることが確認できる。\n　それではこの結果をグラフとして示してみよう。作図には{ggplot2}パッケージを使う。まずはout_mean_dfをggplot()関数に渡す。ggplot()関数以降は、+演算子を使ってレイヤーを足していくこととなる。棒グラフのレイヤーはgeom_bar()関数であり、その中にaes()関数を入れる。aes()の中には棒グラフの作図に必要な情報を入れる必要がある（これをマッピング（mapping）と呼ぶ）。棒グラフを作成するために必要な最低限の情報とは各棒の横軸上の位置（x）と棒の高さ（y）だ。今回は横軸がグループ名、縦軸が平均値となる棒グラフを作る。aes()外側にはstat = \"identity\"を忘れずに付けること。\n\nout_mean_df |>\n  ggplot() +\n  geom_bar(aes(x = Groups, y = Outcome), stat = \"identity\")\n\n\n\n\n図 1: ?(caption)\n\n\n\n\n　続いて、このグラフの見た目を調整してみよう。\n\nout_mean_df |>\n  ggplot() +\n  geom_bar(aes(x = Groups, y = Outcome), stat = \"identity\") +\n  # 縦軸（y軸）のラベルを変更する\n  labs(y = \"Mean(Outcome)\") +\n  # grayテーマ（デフォルトのテーマ）を使用し、フォントサイズは14\n  theme_gray(base_size = 14)\n\n\n\n\n図 2: ?(caption)\n\n\n\n\n　また、geom_label()レイヤーを足すと、棒の上にラベルを付けることもできる。ラベルに必要な情報は各ラベルの横軸上の位置（x）、縦軸上の位置（y）、ラベルの表示内容（label）だ。今回のラベルは平均値の具体的な数値を入れてみよう。\n\nout_mean_df |>\n  ggplot() +\n  geom_bar(aes(x = Groups, y = Outcome), stat = \"identity\") +\n  geom_label(aes(x = Groups, y = Outcome, label = Outcome)) +\n  labs(y = \"Mean(Outcome)\") +\n  theme_gray(base_size = 14)\n\n\n\n\n図 3: ?(caption)\n\n\n\n\n　小数点が長すぎるので3桁まで表示としよう。ここではsprintf()を使用する。使い方が簡単とは言えないが、覚える必要はなく、必要な時にググるか、本資料のコードをコピペすれば良い5。\n\nout_mean_df |>\n  ggplot() +\n  geom_bar(aes(x = Groups, y = Outcome), stat = \"identity\") +\n  # 2桁までなら %.3f を %.2f に変更\n  geom_label(aes(x = Groups, y = Outcome, label = sprintf(\"%.3f\", Outcome))) +\n  labs(y = \"Mean(Outcome)\") +\n  theme_gray(base_size = 14)\n\n\n\n\n図 4: ?(caption)\n\n\n\n\n　これで可視化ができた。ただし、以上のコードには改善の余地がある。geom_bar()とgeom_label()内のaes()関数に注目して欲しい。よく見るとxとyと同じだろう。geom_*()が共有するマッピングがあれば、ggplot()内で指定することでコードを効率化することもできる。\n\nout_mean_df |>\n  ggplot(aes(x = Groups, y = Outcome)) +\n  geom_bar(stat = \"identity\") +\n  geom_label(aes(label = sprintf(\"%.3f\", Outcome))) +\n  labs(y = \"Mean(Outcome)\") +\n  theme_gray(base_size = 14)\n\n\n\n\n図 5: ?(caption)\n\n\n\n\n\n\n統計的推定\n　これまでの作業はグループごとの応答変数の平均値であって、処置効果ではない。処置効果を計算するためには処置群の平均値から統制群の平均値を引く必要がある。たとえば、Civic Dutyはがき群の平均値は約0.315、統制群のそれは0.297であるため、Civic Dutyはがきの処置効果は約0.018である。しかし、これを各グループごとに計算することは面倒だし、何よりも得られた値が点推定値だという限界がある。得られた処置効果の不確実性は計算できない。\n　ここで有効なのが線形回帰分析である。回帰分析を行うことで処置効果の点推定値のみならず、不確実性の指標である標準誤差も計算され、区間推定や統計的仮説検定も可能となる。線形回帰分析の関数はlm()だ。第1引数としては回帰式であり、応答変数 ~ 説明変数と表記する。第2引数はdataであり、回帰式で指定した変数が入っているデータ名を指定する。回帰分析の結果は名前を付けてオブジェクトとして格納し、summary()関数を使うと、詳細が確認できる。\n\nfit1 <- lm(voted2006 ~ treatment, data = df)\n\nsummary(fit1)\n\n\nCall:\nlm(formula = voted2006 ~ treatment, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.3780 -0.3145 -0.2966  0.6549  0.7034 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         0.296638   0.001061 279.525  < 2e-16 ***\ntreatmentCivic Duty 0.017899   0.002600   6.884 5.85e-12 ***\ntreatmentSelf       0.048513   0.002600  18.657  < 2e-16 ***\ntreatmentNeighbors  0.081310   0.002601  31.263  < 2e-16 ***\ntreatmentHawthorne  0.025736   0.002601   9.896  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4641 on 344079 degrees of freedom\nMultiple R-squared:  0.003394,  Adjusted R-squared:  0.003383 \nF-statistic:   293 on 4 and 344079 DF,  p-value: < 2.2e-16\n\n\n　ちなみに、これもパイプ演算子を使うことができる。ただし、第1引数として渡すパイプ演算子の特徴上、そのまま使うことはできない。なぜならlm()関数の第1引数はデータでなく、回帰式（formula型）だから。この場合はプレースホルダー（place holder）を指定する必要がある。パイプ前のオブジェクトが入る位置を任意に指定することであり、_を使う。%>%演算子を使う場合は_でなく、.を使う。上記のコードと以下のコードは同じコードとなる。プレースホルダーは自分が使うパイプ演算子によって使い分けること。\n\nfit1 <- df |> # |> パイプを使う場合\n  lm(voted2006 ~ treatment, data = _)\n\nfit1 <- df %>% # %>% パイプを使う場合\n  lm(voted2006 ~ treatment, data = .)\n\n　Factor型、または文字型変数が説明変数の場合、自動的にダミー変数として処理され、Factor型の場合、最初の水準（ここでは\"Control\"）がベースカテゴリとなる。説明変数が文字型ならアルファベット順で最初の水準がベースカテゴリとなり、今回の例だと\"Civic Duty\"がベースカテゴリとなる。処置効果は「統制群に比べて〜」が重要となるので、数値型以外の説明変数は予めfactor化しておいた方が望ましい。\n　Civic Dutyの推定値は約0.018であり、これは統制群に比べ、Civic Duty群のvoted2006の平均値は約0.018高いことを意味する。応答変数が0、1であるため、これを割合（=投票率）で換算すると、約1.8%p高いことを意味する。つまり、Civic Dutyのはがきをもらった被験者はそうでない被験者に比べて投票率が約1.8%p高いことを意味する。他の推定値も同じやり方で解釈すれば良い。\n　それではこれらの処置効果が統計的に有意なものかを確認してみよう。統計的有意か否かを判定するためには有意と非有意の境界線が必要である、これは通常、有意水準（significance level; \\(\\alpha\\)）と呼ばれる。この有意水準は分析者が決めるものであるが、社会科学で広く使われる基準は\\(\\alpha = 0.05\\)、つまり5%だ。分析結果の画面にはPr(>|t|)列が表示されているが、これが\\(p\\)値と呼ばれるもので、これが0.05を下回る場合、統計的に有意と判定する。もし、\\(\\alpha = 0.1\\)を採用するなら、\\(p < 0.1\\)の場合において統計的に有意と判定する。Civic Dutyの\\(p\\)値は5.85e-12であり、これは\\(5.75 \\times 10^{-12}\\)を意味する。\\(10^{-1}\\)は0.1、\\(10^{-2}\\)は0.01であることを考えると非常に小さい数値であり、統計的に有意であると考えられる。また、\\(p\\)値が一定値以下であれば< 2e-16と表示される。4つの処置群において処置効果は統計的に有意であると判定できよう。\n　続いて、この結果を可視化してみよう。ここでも{ggplot2}パッケージを使って可視化をするが、{ggplot2}で使用可能なオブジェクトは表形式のデータである。Rコンソール上でclass(オブジェクト名)を入力すると、データのクラスが出力されるが、このクラスに\"data.frame\"があれば、{ggplot2}で使用できる。たとえば、fit1オブジェクトのクラスは\"lm\"であるため、そのまま{ggplot2}で使うことはできない。\n\nclass(fit1)\n\n[1] \"lm\"\n\n\n　推定結果を表形式に変換するためには{broom}パッケージのtidy()関数が便利だ。使い方は簡単でtidy()内に回帰分析の推定結果が格納されたオブジェクトを入れるだけである。ただし、デフォルトの設定では95%信頼区間が表示されないため、中にはconf.int = TRUEを追加しておく必要がある。\n\n# 90%信頼区間を使うのであれば conf.int = 0.9 を追加（デフォルトは0.95）\nfit1_coef <- tidy(fit1, conf.int = TRUE)\n\nfit1_coef\n\n# A tibble: 5 × 7\n  term                estimate std.error statistic   p.value conf.low conf.high\n  <chr>                  <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)           0.297    0.00106    280.   0           0.295     0.299 \n2 treatmentCivic Duty   0.0179   0.00260      6.88 5.85e- 12   0.0128    0.0230\n3 treatmentSelf         0.0485   0.00260     18.7  1.22e- 77   0.0434    0.0536\n4 treatmentNeighbors    0.0813   0.00260     31.3  2.94e-214   0.0762    0.0864\n5 treatmentHawthorne    0.0257   0.00260      9.90 4.37e- 23   0.0206    0.0308\n\nclass(fit1_coef)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n　fit1_coefのクラスに\"data.frame\"が含まれているので、これを使って作図することができる。\n　作図する前に、fit1_coefの加工しておきたい。それぞれの係数（estimate列）は処置効果を表しているが、切片（\"(Intercept)\"）の推定値は処置効果とは無関係である。したがって、予め切片の行を除外しておきたい。特定の行を残したり、除外する関数はfilter()である。今回はterm列の値が\"(Intercept)\"ではない行を残したいので、同値演算子（==）の否定を意味する!=演算子を使用する。\n\nfit1_coef <- fit1_coef |>\n  filter(term != \"(Intercept)\")\n\nfit1_coef\n\n# A tibble: 4 × 7\n  term                estimate std.error statistic   p.value conf.low conf.high\n  <chr>                  <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 treatmentCivic Duty   0.0179   0.00260      6.88 5.85e- 12   0.0128    0.0230\n2 treatmentSelf         0.0485   0.00260     18.7  1.22e- 77   0.0434    0.0536\n3 treatmentNeighbors    0.0813   0.00260     31.3  2.94e-214   0.0762    0.0864\n4 treatmentHawthorne    0.0257   0.00260      9.90 4.37e- 23   0.0206    0.0308\n\n\n　それでは作図に入ろう。\n\nfit1_coef |>\n  ggplot() +\n  geom_pointrange(aes(x = term, y = estimate,\n                      ymin = conf.low, ymax = conf.high))\n\n\n\n\n図 6: ?(caption)\n\n\n\n\n\nfit1_coef |>\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = term, y = estimate,\n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"Treatments\", y = \"Average Treatment Effects\") +\n  theme_bw(base_size = 12)\n\n\n\n\n図 7: ?(caption)\n\n\n\n\n\nfit1_coef <- fit1_coef |>\n  mutate(term = recode(term,\n                       \"treatmentCivic Duty\" = \"Civic Duty\",\n                       \"treatmentHawthorne\"  = \"Hawthorne\",\n                       \"treatmentNeighbors\"  = \"Neighbors\",\n                       \"treatmentSelf\"       = \"Self\"))\n\nfit1_coef\n\n# A tibble: 4 × 7\n  term       estimate std.error statistic   p.value conf.low conf.high\n  <chr>         <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 Civic Duty   0.0179   0.00260      6.88 5.85e- 12   0.0128    0.0230\n2 Self         0.0485   0.00260     18.7  1.22e- 77   0.0434    0.0536\n3 Neighbors    0.0813   0.00260     31.3  2.94e-214   0.0762    0.0864\n4 Hawthorne    0.0257   0.00260      9.90 4.37e- 23   0.0206    0.0308\n\n\n\nfit1_coef <- fit1_coef |>\n  mutate(term = str_replace(term, \"treatment\", \"\"))\n\n\nfit1_coef |>\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = term, y = estimate,\n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"Treatments\", y = \"Average Treatment Effects\") +\n  theme_bw(base_size = 12)\n\n\n\n\n図 8: ?(caption)\n\n\n\n\n\nfit1_coef <- fit1_coef |>\n  mutate(term = fct_inorder(term))\nfit1_coef\n\n# A tibble: 4 × 7\n  term       estimate std.error statistic   p.value conf.low conf.high\n  <fct>         <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 Civic Duty   0.0179   0.00260      6.88 5.85e- 12   0.0128    0.0230\n2 Self         0.0485   0.00260     18.7  1.22e- 77   0.0434    0.0536\n3 Neighbors    0.0813   0.00260     31.3  2.94e-214   0.0762    0.0864\n4 Hawthorne    0.0257   0.00260      9.90 4.37e- 23   0.0206    0.0308\n\n\n\nfit1_coef |>\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = term, y = estimate,\n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"Treatments\", y = \"Average Treatment Effects\") +\n  theme_bw(base_size = 12)\n\n\n\n\n図 9: ?(caption)"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "実習用データ集",
    "section": "",
    "text": "ファイル名\n備考\n\n\n\n\n1\nDay1_Data2.csv\n第1回スライド（pp.00-00）"
  }
]